{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nconst initialState = {\n  data: [],\n  newItemLoading: false,\n  offset: 211,\n  charEnded: false,\n  selectedId: -1,\n  firstUpd: true\n};\nexport const getCharacters = _s(createAsyncThunk('char/getCharacters', _s(async state => {\n  _s();\n\n  console.log('yes');\n  const {\n    getAllCharacters\n  } = useMarvelServices();\n  const response = getAllCharacters(211);\n  console.log(response);\n  return response;\n}, \"ibinA0o7PGIUE+uvC9S9Hem2yjg=\", false, function () {\n  return [useMarvelServices];\n})), \"ibinA0o7PGIUE+uvC9S9Hem2yjg=\", false, function () {\n  return [useMarvelServices];\n});\nconst ValueSlice = createSlice({\n  name: 'char',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCharacters.pending, (state, action) => {\n      console.log('Loading Character');\n    }).addCase(getCharacters.fulfilled, (state, action) => {\n      console.log(action);\n      console.log('yes');\n    }).addCase(getCharacters.rejected, (state, action) => {\n      console.log('error');\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = ValueSlice;\nexport default reducer;\nexport const {} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/charList/CharSlice.js"],"names":["createSlice","createAsyncThunk","current","useMarvelServices","initialState","data","newItemLoading","offset","charEnded","selectedId","firstUpd","getCharacters","state","console","log","getAllCharacters","response","ValueSlice","name","reducers","extraReducers","builder","addCase","pending","action","fulfilled","rejected","actions","reducer"],"mappings":";;AAAA,SAAQA,WAAR,EAAoBC,gBAApB,EAAqCC,OAArC,QAAmD,kBAAnD;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,cAAc,EAAC,KAFI;AAGnBC,EAAAA,MAAM,EAAC,GAHY;AAInBC,EAAAA,SAAS,EAAC,KAJS;AAKnBC,EAAAA,UAAU,EAAC,CAAC,CALO;AAMnBC,EAAAA,QAAQ,EAAC;AANU,CAArB;AASA,OAAO,MAAMC,aAAa,MAACV,gBAAgB,CACzC,oBADyC,KAEzC,MAAMW,KAAN,IAAc;AAAA;;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,QAAM;AAACC,IAAAA;AAAD,MAAmBZ,iBAAiB,EAA1C;AACA,QAAMa,QAAQ,GAACD,gBAAgB,CAAC,GAAD,CAA/B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,SAAOA,QAAP;AACD,CARwC;AAAA,UAIdb,iBAJc;AAAA,GAAjB;AAAA,UAIGA,iBAJH;AAAA,EAAnB;AAaP,MAAMc,UAAU,GAACjB,WAAW,CAAC;AAC3BkB,EAAAA,IAAI,EAAC,MADsB;AAE3Bd,EAAAA,YAF2B;AAG3Be,EAAAA,QAAQ,EAAE,EAHiB;AAO3BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACNC,OADD,CACSX,aAAa,CAACY,OADvB,EAC+B,CAACX,KAAD,EAAOY,MAAP,KAAgB;AAC7CX,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAHD,EAICQ,OAJD,CAISX,aAAa,CAACc,SAJvB,EAIiC,CAACb,KAAD,EAAOY,MAAP,KAAgB;AAC/CX,MAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KAPD,EAQCQ,OARD,CAQSX,aAAa,CAACe,QARvB,EAQgC,CAACd,KAAD,EAAOY,MAAP,KAAgB;AAC9CX,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAVD;AAYH;AApB4B,CAAD,CAA5B;AAuBA,MAAM;AAACa,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBX,UAA3B;AAEA,eAAeW,OAAf;AAEA,OAAO,MAAM,KAETD,OAFG","sourcesContent":["import {createSlice,createAsyncThunk,current} from \"@reduxjs/toolkit\"\r\nimport useMarvelServices from \"../../services/MarvelServices\"\r\n\r\nconst initialState = {\r\n  data:[],\r\n  newItemLoading:false,\r\n  offset:211,\r\n  charEnded:false,\r\n  selectedId:-1,\r\n  firstUpd:true,\r\n}\r\n\r\nexport const getCharacters=createAsyncThunk(\r\n  'char/getCharacters',\r\n  async(state)=>{\r\n    console.log('yes')\r\n    const {getAllCharacters}=useMarvelServices();\r\n    const response=getAllCharacters(211)\r\n    console.log(response)\r\n    return response;\r\n  }\r\n)\r\n\r\n\r\n\r\nconst ValueSlice=createSlice({\r\n  name:'char',\r\n  initialState,\r\n  reducers: {\r\n      \r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(getCharacters.pending,(state,action)=>{\r\n      console.log('Loading Character')\r\n    })\r\n    .addCase(getCharacters.fulfilled,(state,action)=>{\r\n      console.log(action)\r\n      console.log('yes')\r\n    })\r\n    .addCase(getCharacters.rejected,(state,action)=>{\r\n      console.log('error')\r\n    })\r\n       \r\n}\r\n})\r\n\r\nconst {actions, reducer} = ValueSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  \r\n} = actions;"]},"metadata":{},"sourceType":"module"}