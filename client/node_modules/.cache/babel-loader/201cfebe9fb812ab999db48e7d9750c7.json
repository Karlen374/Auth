{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\randomChar\\\\RandomChar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './RandomChar.scss';\nimport Spinner from 'react-bootstrap/Spinner'; // import useMarvelServices from '../../services/MarvelServices';\n\nimport mjolnir from '../../resources/img/mjolnir.png'; // import ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport { getCharacter } from '../charList/CharSlice';\nimport { useDispatch, useSelector, getState } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RandomChar = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    char\n  } = useSelector(state => state.char);\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const updateChar = () => {\n    // clearError();//для того чтобы была возможность поменять персонажа после того выскачет ошибка\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    dispatch(getCharacter(id));\n  }; // const errorMessage = error ? <h2>Error</h2>: null;\n  // const spinner = loading ?  <Spinner animation=\"border\" />: null;\n  // const content = !(loading || error) ? <View char={char} onCharSelected={()=>props.onCharSelected(char.id)}/> : null;\n\n\n  const content = /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 19\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [content, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 46\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: updateChar,\n          className: \"inner\",\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RandomChar, \"sAGExVgh+MZCURpI+clwdI/uU3c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RandomChar;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  let CharImg = \"randomchar__img\";\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg = \"randomchar__no__img\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: CharImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = View;\nexport default RandomChar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RandomChar\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/randomChar/RandomChar.js"],"names":["useState","useEffect","Spinner","mjolnir","getCharacter","useDispatch","useSelector","getState","RandomChar","dispatch","char","state","updateChar","id","Math","floor","random","content","View","name","description","thumbnail","homepage","wiki","CharImg"],"mappings":"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","sourcesContent":["import { useState,useEffect } from 'react';\r\nimport './RandomChar.scss';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n// import useMarvelServices from '../../services/MarvelServices';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n// import ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport {getCharacter} from '../charList/CharSlice'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nconst RandomChar=()=>{\r\n  const dispatch=useDispatch()\r\n  const {char}=useSelector(state=>state.char)\r\n  useEffect(() => {\r\n    updateChar();\r\n  },[])\r\n  \r\n  const updateChar = () => {\r\n    // clearError();//для того чтобы была возможность поменять персонажа после того выскачет ошибка\r\n    const id = Math.floor(Math.random()*(1011400-1011000)+1011000);\r\n    dispatch(getCharacter(id))\r\n              \r\n              \r\n  }\r\n\r\n   \r\n    // const errorMessage = error ? <h2>Error</h2>: null;\r\n    // const spinner = loading ?  <Spinner animation=\"border\" />: null;\r\n    // const content = !(loading || error) ? <View char={char} onCharSelected={()=>props.onCharSelected(char.id)}/> : null;\r\n    const content=<View char={char} />\r\n    return (\r\n      <div className=\"randomchar\">\r\n        {/* {errorMessage}если null то просто ничего не будет рендерится */}\r\n        {/* {spinner} */}\r\n        {content}\r\n          <div className=\"randomchar__static\">\r\n              <p className=\"randomchar__title\">\r\n                  Random character for today!<br/>\r\n                  Do you want to get to know him better?\r\n              </p>\r\n              <p className=\"randomchar__title\">\r\n                  Or choose another one\r\n              </p>\r\n              <button className=\"button button__main\">\r\n                  <div onClick={updateChar} className=\"inner\">try it</div>\r\n              </button>\r\n              <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n          </div>\r\n      </div>\r\n  )\r\n  \r\n   \r\n}\r\n\r\nconst View = ({char}) => {\r\n  const { name, description, thumbnail, homepage, wiki, } = char;\r\n  let CharImg = \"randomchar__img\" ;\r\n  if (thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg=\"randomchar__no__img\"\r\n \r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img src={thumbnail} alt=\"Random character\" className={ CharImg}/>\r\n              <div className=\"randomchar__info\">\r\n            <p  className=\"randomchar__name\">{ name}</p>\r\n                  <p className=\"randomchar__descr\">\r\n                     {description}\r\n                  </p>\r\n                  <div className=\"randomchar__btns\">\r\n                      <a href={homepage} className=\"button button__main\">\r\n                          <div className=\"inner\">homepage</div>\r\n                      </a>\r\n                      <a href={wiki} className=\"button button__secondary\">\r\n                          <div className=\"inner\">Wiki</div>\r\n                      </a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  )\r\n}\r\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}