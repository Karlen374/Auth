{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\app\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport LoginPanel from '../loginPanel/LoginPanel';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store from '../../store';\nimport axios from 'axios';\nimport { checkAuth } from '../loginPanel/LoginSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    auth,\n    user\n  } = useSelector(store => store.login);\n  const dispatch = useDispatch(); // const [auth,setAuth]=useState(false)\n  // useEffect(() => {\n  //   if (localStorage.getItem('token')){\n  //     dispatch(checkAuth())\n  //     console.log('auth=',auth)\n  //   }\n  // },[])\n  //   const  checkAuth=async()=> {\n  //     try {\n  //         const response = await axios.get(`http://localhost:5000/api/refresh`, {withCredentials: true})\n  //         console.log(response);\n  //         localStorage.setItem('token', response.data.accessToken);\n  //         setAuth(true)\n  //     } catch (e) {\n  //         console.log(e.response?.data?.message);\n  //     } \n  // }\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      dispatch(checkAuth());\n    }\n  }, []);\n  const content = auth ? ` Пользователь авторизован ` : `АВТОРИЗУЙТЕСЬ`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [content, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XRAEzTedZ+p5LvkzW1iDHaD9ngE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/app/App.js"],"names":["LoginPanel","useEffect","useState","useDispatch","useSelector","store","axios","checkAuth","App","auth","user","login","dispatch","localStorage","getItem","content"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAcN,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACM,KAAhB,CAA/B;AACA,QAAMC,QAAQ,GAACT,WAAW,EAA1B,CAHa,CAIb;AAEA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACEF,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC/BF,MAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACD;AACF,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMQ,OAAO,GAACN,IAAI,GAAG,4BAAH,GAAgC,eAAlD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,iBAAKM,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApCQP,G;UAEaJ,W,EACLD,W;;;KAHRK,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport LoginPanel from '../loginPanel/LoginPanel';\nimport {useEffect,useState} from 'react'\nimport { useDispatch,useSelector } from 'react-redux';\nimport store from '../../store';\nimport axios from 'axios'\nimport {checkAuth} from '../loginPanel/LoginSlice'\n\nfunction App() {\n\n  const {auth,user} = useSelector(store => store.login);\n  const dispatch=useDispatch()\n  // const [auth,setAuth]=useState(false)\n\n  // useEffect(() => {\n  //   if (localStorage.getItem('token')){\n  //     dispatch(checkAuth())\n  //     console.log('auth=',auth)\n  //   }\n  // },[])\n//   const  checkAuth=async()=> {\n//     try {\n//         const response = await axios.get(`http://localhost:5000/api/refresh`, {withCredentials: true})\n//         console.log(response);\n//         localStorage.setItem('token', response.data.accessToken);\n//         setAuth(true)\n       \n//     } catch (e) {\n//         console.log(e.response?.data?.message);\n//     } \n// }\n  useEffect(()=>{\n    if(localStorage.getItem('token')){\n      dispatch(checkAuth())\n    }\n  },[])\n\n  const content=auth? ` Пользователь авторизован `:`АВТОРИЗУЙТЕСЬ`\n  return (\n    <div className='App'>\n      <h1>{content} </h1>\n      <LoginPanel/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}