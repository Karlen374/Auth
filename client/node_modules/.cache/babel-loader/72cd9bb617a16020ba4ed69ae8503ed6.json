{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\exchangeValue\\\\ExchangeValue.js\",\n    _s = $RefreshSig$();\n\nimport './ExchangeValue.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport useConversionServices from '../../services/ConversionApi';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, getState } from 'react-redux';\nimport { changeValue } from './ValueSlice.js';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExchangeValue = () => {\n  _s();\n\n  const [currency, setCurrency] = useState('1');\n  const [updateCurrency, setUpdateCurrency] = useState('');\n  const {\n    getConvertValue\n  } = useConversionServices();\n  const [inputVal, setInputVal] = useState('USD');\n  const [convertVal, setConvertVal] = useState('RUB');\n  const [spinner, setSpinner] = useState(false);\n  const [result, setResult] = useState(false);\n  const dispatch = useDispatch(); // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n  const top100Films = [{\n    label: 'The Shawshank Redemption',\n    year: 1994\n  }, {\n    label: 'The Godfather',\n    year: 1972\n  }, {\n    label: 'The Godfather: Part II',\n    year: 1974\n  }, {\n    label: 'The Dark Knight',\n    year: 2008\n  }, {\n    label: '12 Angry Men',\n    year: 1957\n  }, {\n    label: \"Schindler's List\",\n    year: 1993\n  }, {\n    label: 'Pulp Fiction',\n    year: 1994\n  }];\n\n  const request = () => {\n    setSpinner(true);\n    getConvertValue(inputVal).then(Load);\n  };\n\n  useEffect(() => {\n    request();\n  }, [convertVal, inputVal, currency]);\n\n  const changeInputVal = e => {\n    setInputVal(e.target.value);\n  };\n\n  const changeConvertVal = e => {\n    setConvertVal(e.target.value);\n  };\n\n  const onUpdateLocal = e => {\n    const currency = e.target.value;\n    setCurrency(currency);\n    setResult(false);\n  };\n\n  const Load = res => {\n    dispatch(changeValue(inputVal));\n    const coefficient = res.data[convertVal].value;\n    setUpdateCurrency(currency * coefficient);\n    setSpinner(false);\n    setResult(true);\n  };\n\n  const spinnerView = spinner ? /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    variant: \"dark\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 29\n  }, this) : null;\n  const content = result ? /*#__PURE__*/_jsxDEV(Result, {\n    currency: currency,\n    inputVal: inputVal,\n    updateCurrency: updateCurrency,\n    convertVal: convertVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 22\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"convert\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convertBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"From\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: inputVal,\n            onChange: changeInputVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD $\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RUB\",\n              children: \"RUB \\u20BD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR \\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"JPY\",\n              children: \"JPY \\xA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL R$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AMD\",\n              children: \"AMD \\u058F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Amount\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"convert-input\",\n            placeholder: \"...\",\n            value: currency,\n            onChange: onUpdateLocal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" To\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: convertVal,\n            onChange: changeConvertVal,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"USD\",\n              children: \"USD $\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"RUB\",\n              children: \"RUB \\u20BD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"EUR\",\n              children: \"EUR \\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"JPY\",\n              children: \"JPY \\xA5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"BRL\",\n              children: \"BRL R$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AMD\",\n              children: \"AMD \\u058F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convertResult\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: request,\n          children: [\" Convert \", spinnerView, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this), content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-demo\",\n      options: top100Films,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExchangeValue, \"MVasLCXYJXeXEsJY/iTsKOmXkYM=\", false, function () {\n  return [useConversionServices, useDispatch];\n});\n\n_c = ExchangeValue;\n\nconst Result = _ref => {\n  let {\n    currency,\n    inputVal,\n    updateCurrency,\n    convertVal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currency, \" \", inputVal, \" is \", updateCurrency, \" \", convertVal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Result;\nexport default ExchangeValue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExchangeValue\");\n$RefreshReg$(_c2, \"Result\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/exchangeValue/ExchangeValue.js"],"names":["Spinner","useConversionServices","useState","useEffect","useDispatch","useSelector","getState","changeValue","Autocomplete","TextField","ExchangeValue","currency","setCurrency","updateCurrency","setUpdateCurrency","getConvertValue","inputVal","setInputVal","convertVal","setConvertVal","spinner","setSpinner","result","setResult","dispatch","top100Films","label","year","request","then","Load","changeInputVal","e","target","value","changeConvertVal","onUpdateLocal","res","coefficient","data","spinnerView","content","width","params","Result"],"mappings":"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","sourcesContent":["import './ExchangeValue.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport useConversionServices from '../../services/ConversionApi';\r\nimport { useState ,useEffect} from 'react';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {changeValue} from './ValueSlice.js'\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst ExchangeValue=()=>{\r\n\r\nconst [currency,setCurrency]=useState('1');\r\nconst [updateCurrency,setUpdateCurrency]=useState('');\r\nconst {getConvertValue}=useConversionServices();\r\nconst [inputVal,setInputVal]=useState('USD');\r\nconst [convertVal,setConvertVal]=useState('RUB')\r\nconst [spinner,setSpinner]=useState(false);\r\nconst [result,setResult]=useState(false)\r\nconst dispatch=useDispatch()\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { label: 'The Shawshank Redemption', year: 1994 },\r\n  { label: 'The Godfather', year: 1972 },\r\n  { label: 'The Godfather: Part II', year: 1974 },\r\n  { label: 'The Dark Knight', year: 2008 },\r\n  { label: '12 Angry Men', year: 1957 },\r\n  { label: \"Schindler's List\", year: 1993 },\r\n  { label: 'Pulp Fiction', year: 1994 },]\r\n  \r\nconst request=()=>{\r\n  setSpinner(true);\r\n  getConvertValue(inputVal).then(Load)\r\n}\r\n\r\n useEffect(()=>{\r\n  request();\r\n },[convertVal,inputVal,currency])\r\n\r\nconst changeInputVal=(e)=>{\r\n  setInputVal(e.target.value)\r\n}\r\nconst changeConvertVal=(e)=>{\r\n  setConvertVal(e.target.value)\r\n}\r\n\r\nconst onUpdateLocal=(e)=>{\r\n  const currency=e.target.value;\r\n  setCurrency(currency);\r\n  setResult(false);\r\n}\r\n\r\nconst Load=(res)=>{\r\n  dispatch(changeValue(inputVal))\r\n  const coefficient=res.data[convertVal].value\r\n  setUpdateCurrency(currency*coefficient);\r\n  setSpinner(false)\r\n  setResult(true)\r\n}\r\n\r\nconst spinnerView=spinner?  <Spinner animation=\"border\" size='sm' variant=\"dark\" />:null;\r\nconst content=result?<Result currency={currency} inputVal={inputVal} updateCurrency={updateCurrency} convertVal={convertVal}/>:null;\r\n  \r\nreturn(\r\n    <>\r\n  \r\n    <div className='convert'>\r\n    <div className='convertBlock'>\r\n      <label>From\r\n    <select value={inputVal} onChange={changeInputVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n\r\n    </select>\r\n    </label>\r\n    <label>Amount\r\n    <input type=\"number\"\r\n            className=\"convert-input\"\r\n            placeholder=\"...\"\r\n            value={currency}\r\n            onChange={onUpdateLocal}\r\n            />\r\n    </label>   \r\n            <label> To\r\n     <select value={convertVal} onChange={changeConvertVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n    </select>\r\n    </label>\r\n    \r\n    </div>\r\n    <div className='convertResult'>\r\n      <button onClick={request}> Convert {spinnerView} </button>\r\n      {content}\r\n    </div>\r\n    </div>\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={top100Films}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Movie\" />}\r\n    />\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nconst Result=({currency,inputVal,updateCurrency,convertVal})=>{\r\n  return(\r\n    <div>{currency} {inputVal} is {updateCurrency} {convertVal}</div> \r\n  )\r\n}\r\nexport default ExchangeValue;"]},"metadata":{},"sourceType":"module"}