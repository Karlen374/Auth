{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useEdamamServices from \"../../services/Edamam\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  loading: false\n};\nexport const searchFood = _s(createAsyncThunk('food/searchFood', _s(async state => {\n  _s();\n\n  const {\n    getFoodData\n  } = useEdamamServices();\n  const response = await getFoodData(state);\n  return response;\n}, \"QbOIZX+NLwOB2HrbdbjBONNerIk=\", false, function () {\n  return [useEdamamServices];\n})), \"QbOIZX+NLwOB2HrbdbjBONNerIk=\", false, function () {\n  return [useEdamamServices];\n});\nconst FoodSlice = createSlice({\n  name: 'food',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(searchFood).addCase(searchFood.fulfilled, (state, action) => {\n      console.log(action.payload.hits);\n      state.data = action.payload.hits;\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = FoodSlice;\nexport default reducer;\nexport const {} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/FoodSearch/FoodSlice.js"],"names":["useEdamamServices","createSlice","createAsyncThunk","initialState","data","loading","searchFood","state","getFoodData","response","FoodSlice","name","reducers","extraReducers","builder","addCase","fulfilled","action","console","log","payload","hits","actions","reducer"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,uBAA9B;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,OAAO,EAAC;AAFW,CAArB;AAKA,OAAO,MAAMC,UAAU,MAACJ,gBAAgB,CACtC,iBADsC,KAEtC,MAAMK,KAAN,IAAc;AAAA;;AACZ,QAAM;AAACC,IAAAA;AAAD,MAAcR,iBAAiB,EAArC;AACA,QAAMS,QAAQ,GAAC,MAAMD,WAAW,CAACD,KAAD,CAAhC;AACA,SAAOE,QAAP;AACD,CANqC;AAAA,UAGhBT,iBAHgB;AAAA,GAAjB;AAAA,UAGCA,iBAHD;AAAA,EAAhB;AAQP,MAAMU,SAAS,GAACT,WAAW,CAAC;AAC1BU,EAAAA,IAAI,EAAC,MADqB;AAE1BR,EAAAA,YAF0B;AAG1BS,EAAAA,QAAQ,EAAE,EAHgB;AAM1BC,EAAAA,aAAa,EAAEC,OAAD,IAAW;AACvBA,IAAAA,OAAO,CACJC,OADH,CACWT,UADX,EAEGS,OAFH,CAEWT,UAAU,CAACU,SAFtB,EAEgC,CAACT,KAAD,EAAOU,MAAP,KAAgB;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAP,CAAeC,IAA3B;AACAd,MAAAA,KAAK,CAACH,IAAN,GAAWa,MAAM,CAACG,OAAP,CAAeC,IAA1B;AAED,KANH;AAOD;AAdyB,CAAD,CAA3B;AAgBA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBb,SAA3B;AAEA,eAAea,OAAf;AAEA,OAAO,MAAM,KAETD,OAFG","sourcesContent":["import useEdamamServices from \"../../services/Edamam\";\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  data:[],\r\n  loading:false\r\n}\r\n\r\nexport const searchFood=createAsyncThunk(\r\n  'food/searchFood',\r\n  async(state)=>{\r\n    const {getFoodData}=useEdamamServices();\r\n    const response=await getFoodData(state)\r\n    return response\r\n  }\r\n)\r\nconst FoodSlice=createSlice({\r\n  name:'food',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers:(builder)=>{\r\n    builder\r\n      .addCase(searchFood)\r\n      .addCase(searchFood.fulfilled,(state,action)=>{\r\n        console.log(action.payload.hits)\r\n        state.data=action.payload.hits\r\n        \r\n      })\r\n  }\r\n})\r\nconst {actions, reducer} = FoodSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  \r\n} = actions;"]},"metadata":{},"sourceType":"module"}