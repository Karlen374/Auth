{"ast":null,"code":"import useWeatherServices from '../../services/WeatherApi';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  city: ''\n}; // export const searchCity=createAsyncThunk(\n//   'weather/searchCity',\n//   async(state,action)=>{\n//     console.log('Yes')\n//     const {getWeatherByCity}=useWeatherServices();\n//     console.log(action)\n//     const response= await getWeatherByCity('Erevan')\n//     console.log(response)\n//     return response\n//   }\n// )\n\nconst WeatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    }\n  } // extraReducers:(builder)=>{\n  //   builder\n  //     .addCase(searchCity.fulfilled,(state,action)=>{\n  //       console.log(action)\n  //     })\n  //     .addCase(searchCity.rejected,(state,action)=>{\n  //       console.log('error')\n  //     })\n  // }\n\n});\nconst {\n  actions,\n  reducer\n} = WeatherSlice;\nexport default reducer;\nexport const {} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherList/WeatherSlice.js"],"names":["useWeatherServices","createSlice","createAsyncThunk","initialState","data","city","WeatherSlice","name","reducers","logout","state","response","AuthService","localStorage","removeItem","auth","user","e","console","log","message","actions","reducer"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,2BAA/B;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,IAAI,EAAC;AAFc,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAACL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAC,SADwB;AAE7BJ,EAAAA,YAF6B;AAG7BK,EAAAA,QAAQ,EAAC;AACPC,IAAAA,MAAM,EAAC,MAAMC,KAAN,IAAc;AACnB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,WAAW,CAACH,MAAZ,EAAvB;AACAI,QAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAJ,QAAAA,KAAK,CAACK,IAAN,GAAW,KAAX;AACAL,QAAAA,KAAK,CAACM,IAAN,GAAW,EAAX;AACD,OALD,CAMA,OAAOC,CAAP,EAAU;AAAA;;AACRC,QAAAA,OAAO,CAACC,GAAR,gBAAYF,CAAC,CAACN,QAAd,oEAAY,YAAYP,IAAxB,qDAAY,iBAAkBgB,OAA9B;AACD;AACF;AAXM,GAHoB,CAgB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxB6B,CAAD,CAA9B;AA2BA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBhB,YAA3B;AAEA,eAAegB,OAAf;AAEA,OAAO,MAAM,KAETD,OAFG","sourcesContent":["import useWeatherServices from '../../services/WeatherApi'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n  data:[],\r\n  city:''\r\n}\r\n\r\n// export const searchCity=createAsyncThunk(\r\n//   'weather/searchCity',\r\n//   async(state,action)=>{\r\n//     console.log('Yes')\r\n//     const {getWeatherByCity}=useWeatherServices();\r\n//     console.log(action)\r\n//     const response= await getWeatherByCity('Erevan')\r\n//     console.log(response)\r\n//     return response\r\n//   }\r\n// )\r\n\r\nconst WeatherSlice=createSlice({\r\n  name:'weather',\r\n  initialState,\r\n  reducers:{\r\n    logout:async(state)=>{\r\n      try {\r\n        const response = await AuthService.logout();\r\n        localStorage.removeItem('token');\r\n        state.auth=false;\r\n        state.user={};\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n  },\r\n  // extraReducers:(builder)=>{\r\n  //   builder\r\n  //     .addCase(searchCity.fulfilled,(state,action)=>{\r\n  //       console.log(action)\r\n  //     })\r\n  //     .addCase(searchCity.rejected,(state,action)=>{\r\n  //       console.log('error')\r\n  //     })\r\n  // }\r\n})\r\n\r\nconst {actions, reducer} = WeatherSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   \r\n} = actions;\r\n"]},"metadata":{},"sourceType":"module"}