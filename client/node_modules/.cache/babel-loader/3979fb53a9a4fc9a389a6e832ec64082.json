{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useEdamamServices from \"../../services/Edamam\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  loading: false,\n  favoriteData: []\n};\nexport const searchFood = _s(createAsyncThunk('food/searchFood', _s(async state => {\n  _s();\n\n  const {\n    getFoodData\n  } = useEdamamServices();\n  const response = await getFoodData(state);\n  return response;\n}, \"QbOIZX+NLwOB2HrbdbjBONNerIk=\", false, function () {\n  return [useEdamamServices];\n})), \"QbOIZX+NLwOB2HrbdbjBONNerIk=\", false, function () {\n  return [useEdamamServices];\n});\nconst FoodSlice = createSlice({\n  name: 'food',\n  initialState,\n  reducers: {\n    addFavorite: (state, action) => {\n      state.favoriteData.push(action.payload);\n      console.log('favoriteData=', state.favoriteData);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(searchFood.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(searchFood.fulfilled, (state, action) => {\n      console.log(action.payload.hits);\n      state.data = action.payload.hits;\n      state.loading = false;\n    }).addCase(searchFood.rejected, () => {\n      console.log('error');\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = FoodSlice;\nexport default reducer;\nexport const {\n  addFavorite\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/FoodSearch/FoodSlice.js"],"names":["useEdamamServices","createSlice","createAsyncThunk","initialState","data","loading","favoriteData","searchFood","state","getFoodData","response","FoodSlice","name","reducers","addFavorite","action","push","payload","console","log","extraReducers","builder","addCase","pending","fulfilled","hits","rejected","actions","reducer"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,uBAA9B;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,OAAO,EAAC,KAFW;AAGnBC,EAAAA,YAAY,EAAC;AAHM,CAArB;AAMA,OAAO,MAAMC,UAAU,MAACL,gBAAgB,CACtC,iBADsC,KAEtC,MAAMM,KAAN,IAAc;AAAA;;AACZ,QAAM;AAACC,IAAAA;AAAD,MAAcT,iBAAiB,EAArC;AACA,QAAMU,QAAQ,GAAC,MAAMD,WAAW,CAACD,KAAD,CAAhC;AACA,SAAOE,QAAP;AACD,CANqC;AAAA,UAGhBV,iBAHgB;AAAA,GAAjB;AAAA,UAGCA,iBAHD;AAAA,EAAhB;AAQP,MAAMW,SAAS,GAACV,WAAW,CAAC;AAC1BW,EAAAA,IAAI,EAAC,MADqB;AAE1BT,EAAAA,YAF0B;AAG1BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACN,KAAD,EAAQO,MAAR,KAAmB;AAC9BP,MAAAA,KAAK,CAACF,YAAN,CAAmBU,IAAnB,CAAwBD,MAAM,CAACE,OAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BX,KAAK,CAACF,YAAlC;AACH;AAJS,GAHgB;AAS1Bc,EAAAA,aAAa,EAAEC,OAAD,IAAW;AACvBA,IAAAA,OAAO,CACJC,OADH,CACWf,UAAU,CAACgB,OADtB,EAC8B,CAACf,KAAD,EAAOO,MAAP,KAAgB;AAC1CP,MAAAA,KAAK,CAACH,OAAN,GAAc,IAAd;AACD,KAHH,EAIGiB,OAJH,CAIWf,UAAU,CAACiB,SAJtB,EAIgC,CAAChB,KAAD,EAAOO,MAAP,KAAgB;AAC5CG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAP,CAAeQ,IAA3B;AACAjB,MAAAA,KAAK,CAACJ,IAAN,GAAWW,MAAM,CAACE,OAAP,CAAeQ,IAA1B;AACAjB,MAAAA,KAAK,CAACH,OAAN,GAAc,KAAd;AACD,KARH,EASGiB,OATH,CASWf,UAAU,CAACmB,QATtB,EAS+B,MAAI;AAC/BR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAXH;AAYD;AAtByB,CAAD,CAA3B;AAwBA,MAAM;AAACQ,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBjB,SAA3B;AAEA,eAAeiB,OAAf;AAEA,OAAO,MAAM;AACXd,EAAAA;AADW,IAETa,OAFG","sourcesContent":["import useEdamamServices from \"../../services/Edamam\";\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  data:[],\r\n  loading:false,\r\n  favoriteData:[]\r\n}\r\n\r\nexport const searchFood=createAsyncThunk(\r\n  'food/searchFood',\r\n  async(state)=>{\r\n    const {getFoodData}=useEdamamServices();\r\n    const response=await getFoodData(state)\r\n    return response\r\n  }\r\n)\r\nconst FoodSlice=createSlice({\r\n  name:'food',\r\n  initialState,\r\n  reducers: {\r\n    addFavorite: (state, action) => {\r\n      state.favoriteData.push(action.payload)\r\n      console.log('favoriteData=',state.favoriteData)\r\n  },\r\n  },\r\n  extraReducers:(builder)=>{\r\n    builder\r\n      .addCase(searchFood.pending,(state,action)=>{\r\n        state.loading=true;\r\n      })\r\n      .addCase(searchFood.fulfilled,(state,action)=>{\r\n        console.log(action.payload.hits)\r\n        state.data=action.payload.hits\r\n        state.loading=false;\r\n      })\r\n      .addCase(searchFood.rejected,()=>{\r\n        console.log('error')\r\n      })\r\n  }\r\n})\r\nconst {actions, reducer} = FoodSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  addFavorite\r\n} = actions;"]},"metadata":{},"sourceType":"module"}