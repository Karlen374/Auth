{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\charList\\\\CharList.js\",\n    _s = $RefreshSig$();\n\nimport './charList.scss';\nimport { useState, useEffect } from 'react';\nimport useMarvelServices from '../../services/MarvelServices';\nimport Spinner from 'react-bootstrap/Spinner';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharList = props => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(211);\n  const [charEnded, setCharEnded] = useState(false);\n  const [selectedId, setId] = useState(-1);\n  const [firstUpd, setFirstUpd] = useState(true);\n  const {\n    loading,\n    getAllCharacters\n  } = useMarvelServices();\n  useEffect(() => {\n    onRequest(offset);\n  }, []); //выполниться 1 раз только при создании \n\n  const onRequest = offset => {\n    setNewItemLoading(newItemLoading => false);\n    getAllCharacters(offset).then(onCharsLoaded);\n  };\n\n  const onCharsLoaded = Chars => {\n    let ended = false;\n\n    if (Chars.length < 9) {\n      ended = true;\n    }\n\n    setData(data => [...data, ...Chars]);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setFirstUpd(false);\n    setCharEnded(charEnded => ended);\n  };\n\n  const focusOnItem = id => {\n    setId(selectedId => id);\n  };\n\n  {\n    const content = loading && firstUpd ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 43\n    }, this) : /*#__PURE__*/_jsxDEV(Element, {\n      selectedId: selectedId,\n      data: data,\n      onCharSelected: props.onCharSelected,\n      focusOnItem: focusOnItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 75\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__list\",\n      children: [content, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRequest(offset),\n        disabled: newItemLoading,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        className: \"button button__main button__long\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: \"load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CharList, \"GDm7TZGevHAAXOU8FGx7Wv6d07E=\", false, function () {\n  return [useMarvelServices];\n});\n\n_c = CharList;\n\nconst Element = _ref => {\n  let {\n    data,\n    onCharSelected,\n    selectedId,\n    focusOnItem\n  } = _ref;\n  const elements = data.map(item => {\n    const active = item.id === selectedId;\n    const ourClass = active ? 'char__item char__item_selected' : 'char__item';\n    return /*#__PURE__*/_jsxDEV(ElementItem, { ...item,\n      ourClass: ourClass,\n      focusOnItem: () => focusOnItem(item.id),\n      onCharSelected: () => onCharSelected(item.id)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"char__grid\",\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Element;\n\nconst ElementItem = props => {\n  const {\n    name,\n    thumbnail,\n    onCharSelected,\n    focusOnItem,\n    ourClass\n  } = props;\n  let CharImg = \"char__item__img\";\n  if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg = \"char__item__no__img\";\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    tabIndex: 0,\n    onClick: () => {\n      onCharSelected();\n      focusOnItem();\n    },\n    className: ourClass,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: CharImg,\n      src: thumbnail,\n      alt: \"abyss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ElementItem;\nexport default CharList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CharList\");\n$RefreshReg$(_c2, \"Element\");\n$RefreshReg$(_c3, \"ElementItem\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/charList/CharList.js"],"names":["useState","useEffect","useMarvelServices","Spinner","PropTypes","CharList","props","data","setData","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","selectedId","setId","firstUpd","setFirstUpd","loading","getAllCharacters","onRequest","then","onCharsLoaded","Chars","ended","length","focusOnItem","id","content","onCharSelected","Element","elements","map","item","active","ourClass","ElementItem","name","thumbnail","CharImg"],"mappings":"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","sourcesContent":["import './charList.scss';\r\nimport {useState,useEffect} from 'react'\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharList =(props)=>{\r\n  const [data,setData]=useState([]);\r\n  const [newItemLoading,setNewItemLoading]=useState(false);\r\n  const [offset,setOffset]=useState(211);\r\n  const [charEnded,setCharEnded]=useState(false);\r\n  const [selectedId,setId]=useState(-1);\r\n  const [firstUpd,setFirstUpd]=useState(true)\r\n  \r\n  \r\n  const {loading,getAllCharacters}=useMarvelServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset);\r\n    \r\n    },[])//выполниться 1 раз только при создании \r\n\r\n  \r\n  const onRequest = (offset) => {\r\n   \r\n     setNewItemLoading(newItemLoading=> false);\r\n    getAllCharacters(offset).then(onCharsLoaded)\r\n  \r\n  }\r\n\r\n\r\n const onCharsLoaded = (Chars) => {\r\n\r\n    let ended = false;\r\n    if (Chars.length < 9) {\r\n      ended = true;\r\n    }\r\n    setData(data=>[...data,...Chars]);\r\n    setNewItemLoading(newItemLoading=>false);\r\n    setOffset(offset=>offset+9);\r\n    setFirstUpd(false);\r\n    setCharEnded(charEnded=>ended);\r\n    \r\n  }\r\n\r\n  const focusOnItem=(id)=>{\r\n    setId(selectedId=>id);\r\n  }\r\n  \r\n\r\n  \r\n {\r\n    const content = loading && firstUpd ? <Spinner animation=\"border\" />: <Element selectedId={selectedId}  data={data} onCharSelected={props.onCharSelected} focusOnItem={focusOnItem}  />;\r\n    return (\r\n      \r\n      <div className=\"char__list\">\r\n        {content}    \r\n        <button onClick={() => onRequest(offset)} disabled={newItemLoading} style={{ 'display':charEnded?'none':'block'}} className=\"button button__main button__long\">\r\n              <div className=\"inner\">load more</div>\r\n          </button>\r\n      </div>\r\n  )\r\n  }\r\n   \r\n}\r\n\r\nconst Element = ({ data, onCharSelected,selectedId,focusOnItem}) => {\r\n  \r\n  const elements = data.map((item) => {\r\n    const active = (item.id === selectedId);\r\n    const ourClass=active?'char__item char__item_selected':'char__item'\r\n    return(\r\n      <ElementItem\r\n        key={item.id}\r\n        {...item}\r\n        ourClass={ourClass}\r\n        focusOnItem={()=>focusOnItem(item.id)}\r\n        onCharSelected={()=>onCharSelected(item.id)}\r\n        \r\n      />\r\n    )\r\n      \r\n  })\r\n  return(\r\n    <ul className=\"char__grid\">\r\n        {elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst ElementItem=(props)=>{\r\n  const { name, thumbnail, onCharSelected,focusOnItem,ourClass} = props;\r\n  let CharImg = \"char__item__img\" ;\r\n  if (thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg=\"char__item__no__img\"\r\n  \r\n  return(\r\n    <li   tabIndex={0}\r\n          \r\n          onClick={() => {\r\n            onCharSelected();\r\n            focusOnItem();\r\n          }}\r\n          className={ourClass}>\r\n          <img className={CharImg} src={thumbnail} alt=\"abyss\"/>\r\n          <div className=\"char__name\">{name}</div>\r\n    </li> \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default CharList;\r\n"]},"metadata":{},"sourceType":"module"}