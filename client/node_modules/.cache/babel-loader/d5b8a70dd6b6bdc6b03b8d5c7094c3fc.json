{"ast":null,"code":"import { useHttp } from \"../hooks/useHttp\";\n\nconst useIpServices = () => {\n  const _apiBase = 'http://ipwhois.app/json/';\n\n  const getUserIp = async () => {\n    const request = async _apiBase => {\n      try {\n        const response = await fetch(_apiBase);\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${_apiBase} status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data;\n      } catch (e) {\n        throw e;\n      }\n    };\n\n    return await request(_apiBase);\n  }; // return {getUserIp}\n\n};\n\nexport default useIpServices;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/services/IpApi.js"],"names":["useHttp","useIpServices","_apiBase","getUserIp","request","response","fetch","ok","Error","status","data","json","e"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;;AAGC,MAAMC,aAAa,GAAC,MAAI;AACvB,QAAMC,QAAQ,GAAC,0BAAf;;AAEA,QAAMC,SAAS,GAAC,YAAS;AACvB,UAAMC,OAAO,GAAC,MAAMF,QAAN,IAAiB;AAC7B,UAAG;AACD,cAAMG,QAAQ,GAAC,MAAMC,KAAK,CAACJ,QAAD,CAA1B;;AACA,YAAI,CAACG,QAAQ,CAACE,EAAd,EAAiB;AACf,gBAAM,IAAIC,KAAJ,CAAW,mBAAkBN,QAAS,YAAWG,QAAQ,CAACI,MAAO,EAAjE,CAAN;AACD;;AACD,cAAMC,IAAI,GAAC,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACA,eAAOD,IAAP;AACD,OAPD,CAOC,OAAME,CAAN,EAAQ;AACP,cAAMA,CAAN;AACD;AACF,KAXD;;AAYA,WAAO,MAAMR,OAAO,CAACF,QAAD,CAApB;AACD,GAdD,CAHuB,CAoBvB;;AAED,CAtBA;;AAuBD,eAAeD,aAAf","sourcesContent":["import { useHttp } from \"../hooks/useHttp\";\r\n\r\n\r\n const useIpServices=()=>{\r\n  const _apiBase='http://ipwhois.app/json/'\r\n\r\n  const getUserIp=async()=>{\r\n    const request=async(_apiBase)=>{\r\n      try{\r\n        const response=await fetch(_apiBase);\r\n        if (!response.ok){\r\n          throw new Error(`Could not fetch ${_apiBase} status: ${response.status}`)\r\n        }\r\n        const data=await response.json();\r\n        return data;\r\n      }catch(e){\r\n        throw e;\r\n      }\r\n    }\r\n    return await request(_apiBase)\r\n  }\r\n  \r\n\r\n  // return {getUserIp}\r\n  \r\n}\r\nexport default useIpServices;"]},"metadata":{},"sourceType":"module"}