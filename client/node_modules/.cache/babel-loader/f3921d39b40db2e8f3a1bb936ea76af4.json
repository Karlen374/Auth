{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\weatherInfo\\\\WeatherInfo.js\",\n    _s = $RefreshSig$();\n\n// import useWeatherServices from \"../components/services/WeatherApi\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { weatherInfo } from '../weatherList/WeatherSlice';\nimport { useDispatch, useSelector, getState } from 'react-redux';\nimport './WeatherInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = _ref => {\n  _s();\n\n  let {} = _ref;\n  const {\n    city\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    cityInfo\n  } = useSelector(store => store.weather); // const { getWeatherByDays } = useWeatherServices();\n  // const [spinner,setSpinner]=useState(true);\n  // const [data,setData]=useState({});\n\n  useEffect(() => {\n    console.log('city=');\n    dispatch(weatherInfo(city));\n  }, [city]); // const onRequest=(city)=>{\n  //   getWeatherByDays(city).then(onWeatherLoad)\n  // }\n  // const onWeatherLoad=(res)=>{\n  //   setData(res);\n  //   setSpinner(false);\n  // }\n  // const content=spinner?<div className=\"Spinner\"><Spinner  animation=\"border\" /></div>:<View data={data}/>;\n\n  const content = /*#__PURE__*/_jsxDEV(View, {\n    data: cityInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `${city} weather`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), content]\n  }, void 0, true);\n};\n\n_s(WeatherInfo, \"nI3Zv6lbRNZszSqVaz30varypaI=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = WeatherInfo;\n\nconst View = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [data.name, \" (\", data.country, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Date: \", data.day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sunrise: \", data.sunrise1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Sunset: \", data.sunset1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherByDays\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Date: \", data.day1, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Max Temp \", data.day1MaxTempC, \"C\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Min Temp \", data.day1MinTempC, \"C\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Date: \", data.day2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Max Temp \", data.day2MaxTempC, \"C\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Min Temp \", data.day2MinTempC, \"C\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = View;\nexport default WeatherInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WeatherInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherInfo/WeatherInfo.js"],"names":["Spinner","useEffect","useState","useParams","Helmet","weatherInfo","useDispatch","useSelector","getState","WeatherInfo","city","dispatch","cityInfo","store","weather","console","log","content","View","data","name","country","day","sunrise1","sunset1","day1","day1MaxTempC","day1MinTempC","day2","day2MaxTempC","day2MinTempC"],"mappings":"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","sourcesContent":["// import useWeatherServices from \"../components/services/WeatherApi\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useEffect,useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {weatherInfo} from '../weatherList/WeatherSlice';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport './WeatherInfo.css'\r\n\r\nconst WeatherInfo =({})=>{\r\n\r\n  const {city}=useParams()\r\n  const dispatch=useDispatch()\r\n  const {cityInfo} = useSelector(store => store.weather);\r\n  // const { getWeatherByDays } = useWeatherServices();\r\n  // const [spinner,setSpinner]=useState(true);\r\n  // const [data,setData]=useState({});\r\n\r\n  useEffect(()=>{\r\n    console.log('city=')\r\n    dispatch(weatherInfo(city))\r\n  },[city])\r\n  \r\n  // const onRequest=(city)=>{\r\n  //   getWeatherByDays(city).then(onWeatherLoad)\r\n  // }\r\n\r\n  // const onWeatherLoad=(res)=>{\r\n  //   setData(res);\r\n  //   setSpinner(false);\r\n  // }\r\n\r\n  // const content=spinner?<div className=\"Spinner\"><Spinner  animation=\"border\" /></div>:<View data={data}/>;\r\n\r\n  const content=<View data={cityInfo}/>;\r\n  return(\r\n    <>\r\n    <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content={`${city} weather`}\r\n        />\r\n        <title>{city}</title>\r\n    </Helmet>\r\n    {content}\r\n    </>\r\n  )\r\n}\r\nconst View=({data})=>{\r\n  return(\r\n    <div className=\"weatherBlock\">\r\n    <h3>{data.name} ({data.country})</h3>\r\n   \r\n    <h4>Date: {data.day}</h4>\r\n    <div>Sunrise: {data.sunrise1}</div>\r\n    <div>Sunset: { data.sunset1}</div>\r\n    <div className=\"weatherByDays\">\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day1} </h4>\r\n          <span>Max Temp {data.day1MaxTempC}C°</span>\r\n          <span>Min Temp {data.day1MinTempC}C°</span>\r\n        </div>\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day2}</h4>\r\n          <span>Max Temp {data.day2MaxTempC}C°</span>\r\n          \r\n          <span>Min Temp {data.day2MinTempC}C°</span>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default WeatherInfo;"]},"metadata":{},"sourceType":"module"}