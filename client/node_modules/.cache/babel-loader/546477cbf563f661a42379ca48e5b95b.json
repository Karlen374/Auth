{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\weatherList\\\\WeatherList.js\",\n    _s = $RefreshSig$();\n\nimport './WeatherList.css';\nimport { useEffect, useState } from \"react\";\nimport CloseButton from 'react-bootstrap/CloseButton';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector, getState } from 'react-redux';\nimport { searchCity } from './WeatherSlice';\nimport WeatherItems from '../weatherItems/WeatherItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherList = () => {\n  _s();\n\n  const [weatherCity, setWeatherCity] = useState('');\n  const {\n    data\n  } = useSelector(store => store.weather);\n  const dispatch = useDispatch();\n\n  const onUpdateCity = e => {\n    setWeatherCity(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log('data=', data);\n  }, [data]);\n\n  const addCity = () => {\n    dispatch(searchCity(weatherCity));\n    setWeatherCity('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      placeholder: \"Add...\",\n      value: weatherCity,\n      onChange: onUpdateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addCity,\n      variant: \"outline-success\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WeatherList, \"CozkDnWk3PKDDT6XGu+yZ043njs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = WeatherList;\nexport default WeatherList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherList\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherList/WeatherList.js"],"names":["useEffect","useState","CloseButton","Link","Button","useDispatch","useSelector","getState","searchCity","WeatherItems","WeatherList","weatherCity","setWeatherCity","data","store","weather","dispatch","onUpdateCity","e","target","value","console","log","addCity"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAkCC,QAAlC,QAAkD,aAAlD;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,MAAMC,WAAW,GAAC,MAAI;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM;AAACY,IAAAA;AAAD,MAASP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,OAAhB,CAA1B;AACA,QAAMC,QAAQ,GAACX,WAAW,EAA1B;;AAEA,QAAMY,YAAY,GAAEC,CAAD,IAAK;AACtBN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGApB,EAAAA,SAAS,CAAC,MAAI;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBT,IAApB;AACD,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;;AAIA,QAAMU,OAAO,GAAC,MAAI;AAChBP,IAAAA,QAAQ,CAACR,UAAU,CAACG,WAAD,CAAX,CAAR;AAEAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,SAAS,EAAC,cADjB;AAEO,MAAA,WAAW,EAAC,QAFnB;AAGO,MAAA,KAAK,EAAED,WAHd;AAIO,MAAA,QAAQ,EAAEM;AAJjB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEM,OAAjB;AAA0B,MAAA,OAAO,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,EAU0E,GAV1E;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC,CApCD;;GAAMb,W;UAGSJ,W,EACAD,W;;;KAJTK,W;AAqCN,eAAeA,WAAf","sourcesContent":["import './WeatherList.css'\r\nimport { useEffect ,useState} from \"react\";\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {searchCity} from './WeatherSlice';\r\nimport WeatherItems from '../weatherItems/WeatherItems';\r\n\r\nconst WeatherList=()=>{\r\n\r\nconst [weatherCity,setWeatherCity]=useState('')\r\nconst {data} = useSelector(store => store.weather);\r\nconst dispatch=useDispatch()\r\n\r\nconst onUpdateCity=(e)=>{\r\n  setWeatherCity(e.target.value)\r\n}\r\nuseEffect(()=>{\r\n  console.log('data=',data)\r\n},[data])\r\n\r\nconst addCity=()=>{\r\n  dispatch(searchCity(weatherCity))\r\n  \r\n  setWeatherCity('')\r\n}\r\n\r\nreturn(\r\n  <div className=\"search-panel\">\r\n\r\n     <h3>Добавление...</h3>\r\n      <input type=\"text\"\r\n             className=\"search-input\"\r\n             placeholder=\"Add...\"\r\n             value={weatherCity}\r\n             onChange={onUpdateCity}\r\n            />\r\n\r\n      <Button onClick={addCity} variant=\"outline-success\">Добавить</Button>{' '}\r\n      \r\n  </div>\r\n)\r\n  \r\n\r\n}\r\nexport default WeatherList;"]},"metadata":{},"sourceType":"module"}