{"ast":null,"code":"import { createSerializableStateInvariantMiddleware, configureStore } from '@reduxjs/toolkit';\nimport login from '../components/loginPanel/LoginSlice';\n\nconst stringMiddleware = () => next => action => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    });\n  }\n\n  return next(action);\n};\n\nconst isSerializable = value => Iterable.isIterable(value) || isPlain(value);\n\nconst getEntries = value => Iterable.isIterable(value) ? value.entries() : Object.entries(value);\n\nconst serializableMiddleware = createSerializableStateInvariantMiddleware({\n  isSerializable,\n  getEntries\n});\nconst store = configureStore({\n  reducer: {\n    login\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/store/index.js"],"names":["createSerializableStateInvariantMiddleware","configureStore","login","stringMiddleware","next","action","type","isSerializable","value","Iterable","isIterable","isPlain","getEntries","entries","Object","serializableMiddleware","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,0CAAT,EAAoDC,cAApD,QAA0E,kBAA1E;AACA,OAAOC,KAAP,MAAkB,qCAAlB;;AAGA,MAAMC,gBAAgB,GAAG,MAAOC,IAAD,IAAWC,MAAD,IAAY;AACjD,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAOD,IAAI,CAAC;AACRE,MAAAA,IAAI,EAAED;AADE,KAAD,CAAX;AAGH;;AACD,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAPD;;AAQA,MAAME,cAAc,GAAIC,KAAD,IAAWC,QAAQ,CAACC,UAAT,CAAoBF,KAApB,KAA8BG,OAAO,CAACH,KAAD,CAAvE;;AAEA,MAAMI,UAAU,GAAIJ,KAAD,IACjBC,QAAQ,CAACC,UAAT,CAAoBF,KAApB,IAA6BA,KAAK,CAACK,OAAN,EAA7B,GAA+CC,MAAM,CAACD,OAAP,CAAeL,KAAf,CADjD;;AAGA,MAAMO,sBAAsB,GAAGf,0CAA0C,CAAC;AACxEO,EAAAA,cADwE;AAExEK,EAAAA;AAFwE,CAAD,CAAzE;AAKA,MAAMI,KAAK,GAAGf,cAAc,CAAC;AACzBgB,EAAAA,OAAO,EAAE;AAACf,IAAAA;AAAD,GADgB;AAEzBgB,EAAAA,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,GAAGC,MAAvB,CAA8BjB,gBAA9B,CAFX;AAGzBkB,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHV,CAAD,CAA5B;AAMA,eAAeR,KAAf","sourcesContent":["import { createSerializableStateInvariantMiddleware,configureStore } from '@reduxjs/toolkit';\r\nimport login from '../components/loginPanel/LoginSlice';\r\n\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        })\r\n    }\r\n    return next(action)\r\n};\r\nconst isSerializable = (value) => Iterable.isIterable(value) || isPlain(value)\r\n\r\nconst getEntries = (value) =>\r\n  Iterable.isIterable(value) ? value.entries() : Object.entries(value)\r\n\r\nconst serializableMiddleware = createSerializableStateInvariantMiddleware({\r\n  isSerializable,\r\n  getEntries,\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: {login},\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}