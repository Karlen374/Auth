{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\weatherList\\\\WeatherList.js\",\n    _s = $RefreshSig$();\n\nimport './WeatherList.css';\nimport { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch, useSelector, getState } from 'react-redux';\nimport { searchCity } from './WeatherSlice';\nimport WeatherItems from '../weatherItems/WeatherItems';\nimport useWeatherServices from '../../services/WeatherApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WeatherList = () => {\n  _s();\n\n  const [weatherCity, setWeatherCity] = useState(''); // const {data} = useSelector(store => store.weather);\n\n  const dispatch = useDispatch();\n  const {\n    getAutoCompleteCityName\n  } = useWeatherServices();\n\n  const onUpdateCity = e => {\n    setWeatherCity(e.target.value);\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem('data').split(',');\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i]) dispatch(searchCity(data[i]));\n    }\n  }, []);\n  useEffect(async () => {\n    const response = await getAutoCompleteCityName();\n    console.log(response);\n  }, []);\n\n  const addCity = () => {\n    dispatch(searchCity(weatherCity));\n    setWeatherCity('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Add...\",\n        value: weatherCity,\n        onChange: onUpdateCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addCity,\n        variant: \"outline-success\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(WeatherItems, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WeatherList, \"468eboFC8jetuj6nxgxhrZxDDGk=\", false, function () {\n  return [useDispatch, useWeatherServices];\n});\n\n_c = WeatherList;\nexport default WeatherList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherList\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherList/WeatherList.js"],"names":["useEffect","useState","Button","useDispatch","useSelector","getState","searchCity","WeatherItems","useWeatherServices","WeatherList","weatherCity","setWeatherCity","dispatch","getAutoCompleteCityName","onUpdateCity","e","target","value","data","localStorage","getItem","split","i","length","response","console","log","addCity"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAkCC,QAAlC,QAAkD,aAAlD;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;;;;AAEA,MAAMC,WAAW,GAAC,MAAI;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C,CAFsB,CAGtB;;AACA,QAAMW,QAAQ,GAACT,WAAW,EAA1B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAA8BL,kBAAkB,EAAtD;;AAEA,QAAMM,YAAY,GAAEC,CAAD,IAAK;AACtBJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMkB,IAAI,GAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,KAA7B,CAAmC,GAAnC,CAAX;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC5B,UAAGJ,IAAI,CAACI,CAAD,CAAP,EAAYV,QAAQ,CAACN,UAAU,CAACY,IAAI,CAACI,CAAD,CAAL,CAAX,CAAR;AACb;AACF,GALQ,EAKP,EALO,CAAT;AAMAtB,EAAAA,SAAS,CAAC,YAAS;AAEf,UAAMwB,QAAQ,GAAE,MAAMX,uBAAuB,EAA7C;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMG,OAAO,GAAC,MAAI;AAChBf,IAAAA,QAAQ,CAACN,UAAU,CAACI,WAAD,CAAX,CAAR;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,SAAS,EAAC,cADjB;AAEO,QAAA,WAAW,EAAC,QAFnB;AAGO,QAAA,KAAK,EAAED,WAHd;AAIO,QAAA,QAAQ,EAAEI;AAJjB;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEa,OAAjB;AAA0B,QAAA,OAAO,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAS0E,GAT1E;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAYA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADF;AAkBC,CA9CD;;GAAMlB,W;UAISN,W,EACqBK,kB;;;KAL9BC,W;AA+CN,eAAeA,WAAf","sourcesContent":["import './WeatherList.css'\r\nimport { useEffect ,useState} from \"react\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {searchCity} from './WeatherSlice';\r\nimport WeatherItems from '../weatherItems/WeatherItems';\r\nimport useWeatherServices from '../../services/WeatherApi';\r\n\r\nconst WeatherList=()=>{\r\n\r\nconst [weatherCity,setWeatherCity]=useState('')\r\n// const {data} = useSelector(store => store.weather);\r\nconst dispatch=useDispatch()\r\nconst { getAutoCompleteCityName } = useWeatherServices();\r\n\r\nconst onUpdateCity=(e)=>{\r\n  setWeatherCity(e.target.value)\r\n}\r\n\r\nuseEffect(()=>{\r\n  const data=localStorage.getItem('data').split(',')\r\n  for(let i=0;i<data.length;i++){\r\n    if(data[i]) dispatch(searchCity(data[i]))\r\n  }\r\n},[])\r\nuseEffect(async()=>{\r\n  \r\n    const response= await getAutoCompleteCityName()\r\n    console.log(response)\r\n},[])\r\n\r\nconst addCity=()=>{\r\n  dispatch(searchCity(weatherCity))\r\n  setWeatherCity('')\r\n}\r\n\r\nreturn(\r\n  <>\r\n  <div className=\"search-panel\">\r\n\r\n     <h3>Добавление...</h3>\r\n      <input type=\"text\"\r\n             className=\"search-input\"\r\n             placeholder=\"Add...\"\r\n             value={weatherCity}\r\n             onChange={onUpdateCity}\r\n            />\r\n      <Button onClick={addCity} variant=\"outline-success\">Добавить</Button>{' '}\r\n  </div>\r\n  <WeatherItems/>\r\n  </>\r\n)\r\n  \r\n\r\n}\r\nexport default WeatherList;"]},"metadata":{},"sourceType":"module"}