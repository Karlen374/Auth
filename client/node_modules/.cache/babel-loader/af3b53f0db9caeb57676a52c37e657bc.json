{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {}\n};\nexport const checkAuth = createAsyncThunk('login/checkAuth', async () => {\n  const response = await axios.get(`http://localhost:5000/api/refresh`, {\n    withCredentials: true\n  });\n  return response;\n});\nexport const registrationUser = createAsyncThunk('login/registrationUser', async (state, action) => {\n  const response = await AuthService.registration(action.payload.email, action.payload.password);\n  return response;\n});\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        console.log('зашли');\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    // registrationUser:async(state,action)=>{\n    // try {\n    //   const response = await AuthService.registration(action.payload.email, action.payload.password);\n    //   localStorage.setItem('token', response.data.accessToken);\n    //   state.auth=true;\n    //   state.user=response.data.user\n    // }\n    // catch (e) {\n    //   console.log(e.response?.data?.message);\n    // }\n    // },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(checkAuth.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      console.log(`action.data.accessToken=${action.payload.data.accessToken}`);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(checkAuth.rejected, (state, action) => {\n      console.log('error');\n    }).addCase(registrationUser.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(registrationUser.rejected, () => {\n      console.log('error');\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser,\n  logout\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","createAsyncThunk","initialState","email","password","auth","user","checkAuth","response","get","withCredentials","registrationUser","state","action","registration","payload","LoginSlice","name","reducers","loginUser","login","localStorage","setItem","data","accessToken","console","log","e","message","logout","removeItem","extraReducers","builder","addCase","fulfilled","rejected","addDefaultCase","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{}\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'login/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nexport const registrationUser=createAsyncThunk(\r\n  'login/registrationUser',\r\n  async(state,action)=>{\r\n    const response = await AuthService.registration(action.payload.email, action.payload.password);\r\n    return response\r\n  }\r\n)\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        console.log('зашли')\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n    // registrationUser:async(state,action)=>{\r\n    // try {\r\n    //   const response = await AuthService.registration(action.payload.email, action.payload.password);\r\n    //   localStorage.setItem('token', response.data.accessToken);\r\n    //   state.auth=true;\r\n    //   state.user=response.data.user\r\n\r\n    // }\r\n    // catch (e) {\r\n    //   console.log(e.response?.data?.message);\r\n    // }\r\n  // },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          console.log(`action.data.accessToken=${action.payload.data.accessToken}`)\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            console.log('error')\r\n        })\r\n        .addCase(registrationUser.fulfilled, (state,action)=>{\r\n          localStorage.setItem('token',action.payload.data.accessToken );\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(registrationUser.rejected,()=>{\r\n          console.log('error')\r\n        })\r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   loginUser,\r\n   logout,\r\n} = actions;"]},"metadata":{},"sourceType":"module"}