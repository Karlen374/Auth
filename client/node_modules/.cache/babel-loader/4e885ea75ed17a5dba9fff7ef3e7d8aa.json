{"ast":null,"code":"import { useHttp } from \"../hooks/useHttp\";\n\nconst request = async function (url) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n  let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n    'Content-Type': 'application/json'\n  };\n\n  try {\n    const response = await fetch(url, {\n      method,\n      body,\n      headers\n    });\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url} status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst useIpServices = () => {\n  const _apiBase = 'http://ipwhois.app/json/';\n\n  const getUserIp = async () => {\n    request();\n  };\n\n  return {\n    getUserIp\n  };\n};\n\nexport default useIpServices;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/services/IpApi.js"],"names":["useHttp","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","useIpServices","_apiBase","getUserIp"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;;AAKA,MAAMC,OAAO,GAAE,gBAAMC,GAAN,EAA+E;AAAA,MAArEC,MAAqE,uEAA9D,KAA8D;AAAA,MAAxDC,IAAwD,uEAAnD,IAAmD;AAAA,MAA9CC,OAA8C,uEAAtC;AAAC,oBAAe;AAAhB,GAAsC;;AAC1F,MAAG;AACD,UAAMC,QAAQ,GAAC,MAAMC,KAAK,CAACL,GAAD,EAAK;AAACC,MAAAA,MAAD;AAAQC,MAAAA,IAAR;AAAaC,MAAAA;AAAb,KAAL,CAA1B;;AACA,QAAI,CAACC,QAAQ,CAACE,EAAd,EAAiB;AACf,YAAM,IAAIC,KAAJ,CAAW,mBAAkBP,GAAI,YAAWI,QAAQ,CAACI,MAAO,EAA5D,CAAN;AACD;;AACD,UAAMC,IAAI,GAAC,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACA,WAAOD,IAAP;AAID,GAVD,CAUC,OAAME,CAAN,EAAQ;AACP,UAAMA,CAAN;AACD;AAEJ,CAfD;;AAkBC,MAAMC,aAAa,GAAC,MAAI;AACvB,QAAMC,QAAQ,GAAC,0BAAf;;AAEA,QAAMC,SAAS,GAAC,YAAS;AAEvBf,IAAAA,OAAO;AACR,GAHD;;AAMA,SAAO;AAACe,IAAAA;AAAD,GAAP;AAED,CAXA;;AAYD,eAAeF,aAAf","sourcesContent":["import { useHttp } from \"../hooks/useHttp\";\r\n\r\n\r\n\r\n \r\nconst request=(async(url,method='GET',body=null,headers={'Content-Type':'application/json'})=>{\r\n    try{\r\n      const response=await fetch(url,{method,body,headers});\r\n      if (!response.ok){\r\n        throw new Error(`Could not fetch ${url} status: ${response.status}`)\r\n      }\r\n      const data=await response.json();\r\n      return data;\r\n      \r\n\r\n\r\n    }catch(e){\r\n      throw e;\r\n    }\r\n\r\n})\r\n\r\n\r\n const useIpServices=()=>{\r\n  const _apiBase='http://ipwhois.app/json/'\r\n\r\n  const getUserIp=async()=>{\r\n    \r\n    request()\r\n  }\r\n  \r\n\r\n  return {getUserIp}\r\n  \r\n}\r\nexport default useIpServices;"]},"metadata":{},"sourceType":"module"}