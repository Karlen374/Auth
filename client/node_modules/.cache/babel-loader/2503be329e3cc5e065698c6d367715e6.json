{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useWeatherServices from '../../services/WeatherApi';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  city: ''\n};\nexport const searchCity = _s(createAsyncThunk('weather/searchCity', _s(async (state, action) => {\n  _s();\n\n  const {\n    getWeatherByCity\n  } = useWeatherServices();\n  getWeatherByCity(state).then;\n  console.log(response); // initialState.data.push(state)\n\n  return response;\n}, \"Zw2WUmbvtFAN4IWB85tUxg+sMu4=\", false, function () {\n  return [useWeatherServices];\n})), \"Zw2WUmbvtFAN4IWB85tUxg+sMu4=\", false, function () {\n  return [useWeatherServices];\n});\nconst WeatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(searchCity.fulfilled, (state, action) => {\n      console.log(action);\n    }).addCase(searchCity.rejected, (state, action) => {\n      console.log('error');\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = WeatherSlice;\nexport default reducer;\nexport const {} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherList/WeatherSlice.js"],"names":["useWeatherServices","createSlice","createAsyncThunk","initialState","data","city","searchCity","state","action","getWeatherByCity","then","console","log","response","WeatherSlice","name","reducers","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"mappings":";;AAAA,OAAOA,kBAAP,MAA+B,2BAA/B;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,IAAI,EAAC;AAFc,CAArB;AAKA,OAAO,MAAMC,UAAU,MAACJ,gBAAgB,CACtC,oBADsC,KAEtC,OAAMK,KAAN,EAAYC,MAAZ,KAAqB;AAAA;;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAmBT,kBAAkB,EAA3C;AACAS,EAAAA,gBAAgB,CAACF,KAAD,CAAhB,CAAwBG,IAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAHmB,CAInB;;AACA,SAAOA,QAAP;AACD,CARqC;AAAA,UAGXb,kBAHW;AAAA,GAAjB;AAAA,UAGMA,kBAHN;AAAA,EAAhB;AAWP,MAAMc,YAAY,GAACb,WAAW,CAAC;AAC7Bc,EAAAA,IAAI,EAAC,SADwB;AAE7BZ,EAAAA,YAF6B;AAG7Ba,EAAAA,QAAQ,EAAC,EAHoB;AAM7BC,EAAAA,aAAa,EAAEC,OAAD,IAAW;AACvBA,IAAAA,OAAO,CACJC,OADH,CACWb,UAAU,CAACc,SADtB,EACgC,CAACb,KAAD,EAAOC,MAAP,KAAgB;AAC5CG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,KAHH,EAIGW,OAJH,CAIWb,UAAU,CAACe,QAJtB,EAI+B,CAACd,KAAD,EAAOC,MAAP,KAAgB;AAC3CG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KANH;AAOD;AAd4B,CAAD,CAA9B;AAiBA,MAAM;AAACU,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBT,YAA3B;AAEA,eAAeS,OAAf;AAEA,OAAO,MAAM,KAETD,OAFG","sourcesContent":["import useWeatherServices from '../../services/WeatherApi'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n  data:[],\r\n  city:''\r\n}\r\n\r\nexport const searchCity=createAsyncThunk(\r\n  'weather/searchCity',\r\n  async(state,action)=>{\r\n    const {getWeatherByCity}=useWeatherServices();\r\n    getWeatherByCity(state).then\r\n    console.log(response)\r\n    // initialState.data.push(state)\r\n    return response\r\n  }\r\n)\r\n\r\nconst WeatherSlice=createSlice({\r\n  name:'weather',\r\n  initialState,\r\n  reducers:{\r\n   \r\n  },\r\n  extraReducers:(builder)=>{\r\n    builder\r\n      .addCase(searchCity.fulfilled,(state,action)=>{\r\n        console.log(action)\r\n      })\r\n      .addCase(searchCity.rejected,(state,action)=>{\r\n        console.log('error')\r\n      })\r\n  }\r\n})\r\n\r\nconst {actions, reducer} = WeatherSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n\r\n} = actions;\r\n"]},"metadata":{},"sourceType":"module"}