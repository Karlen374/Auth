{"ast":null,"code":"import useWeatherServices from '../../services/WeatherApi';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: [],\n  city: ''\n}; // export const searchCity=createAsyncThunk(\n//   'weather/searchCity',\n//   async(state,action)=>{\n//     console.log('Yes')\n//     const {getWeatherByCity}=useWeatherServices();\n//     console.log(action)\n//     const response= await getWeatherByCity('Erevan')\n//     console.log(response)\n//     return response\n//   }\n// )\n\nconst {\n  getWeatherByCity\n} = useWeatherServices();\nconst WeatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    searchCity: async (state, action) => {\n      try {\n        // const response = await AuthService.logout();\n        // localStorage.removeItem('token');\n        // state.auth=false;\n        // state.user={};\n        const response = await getWeatherByCity('Erevan');\n        console.log(response);\n        console.log(state);\n        console.log(action);\n      } catch (e) {\n        // console.log(e.response?.data?.message);\n        console.log('error');\n      }\n    }\n  } // extraReducers:(builder)=>{\n  //   builder\n  //     .addCase(searchCity.fulfilled,(state,action)=>{\n  //       console.log(action)\n  //     })\n  //     .addCase(searchCity.rejected,(state,action)=>{\n  //       console.log('error')\n  //     })\n  // }\n\n});\nconst {\n  actions,\n  reducer\n} = WeatherSlice;\nexport default reducer;\nexport const {\n  searchCity\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/weatherList/WeatherSlice.js"],"names":["useWeatherServices","createSlice","createAsyncThunk","initialState","data","city","getWeatherByCity","WeatherSlice","name","reducers","searchCity","state","action","response","console","log","e","actions","reducer"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,2BAA/B;AACA,SAAQC,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,IAAI,EAAC;AAFc,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAmBN,kBAAkB,EAA3C;AACA,MAAMO,YAAY,GAACN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAC,SADwB;AAE7BL,EAAAA,YAF6B;AAG7BM,EAAAA,QAAQ,EAAC;AACPC,IAAAA,UAAU,EAAC,OAAMC,KAAN,EAAYC,MAAZ,KAAqB;AAE9B,UAAI;AACF;AACA;AACA;AACA;AACA,cAAMC,QAAQ,GAAE,MAAMP,gBAAgB,CAAC,QAAD,CAAtC;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAED,OAVD,CAWA,OAAOI,CAAP,EAAU;AACR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;AAlBM,GAHoB,CAuB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/B6B,CAAD,CAA9B;AAkCA,MAAM;AAACE,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBX,YAA3B;AAEA,eAAeW,OAAf;AAEA,OAAO,MAAM;AACVR,EAAAA;AADU,IAETO,OAFG","sourcesContent":["import useWeatherServices from '../../services/WeatherApi'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n  data:[],\r\n  city:''\r\n}\r\n\r\n// export const searchCity=createAsyncThunk(\r\n//   'weather/searchCity',\r\n//   async(state,action)=>{\r\n//     console.log('Yes')\r\n//     const {getWeatherByCity}=useWeatherServices();\r\n//     console.log(action)\r\n//     const response= await getWeatherByCity('Erevan')\r\n//     console.log(response)\r\n//     return response\r\n//   }\r\n// )\r\nconst {getWeatherByCity}=useWeatherServices();\r\nconst WeatherSlice=createSlice({\r\n  name:'weather',\r\n  initialState,\r\n  reducers:{\r\n    searchCity:async(state,action)=>{\r\n      \r\n      try {\r\n        // const response = await AuthService.logout();\r\n        // localStorage.removeItem('token');\r\n        // state.auth=false;\r\n        // state.user={};\r\n        const response= await getWeatherByCity('Erevan')\r\n        console.log(response)\r\n        console.log(state)\r\n        console.log(action)\r\n        \r\n      }\r\n      catch (e) {\r\n        // console.log(e.response?.data?.message);\r\n        console.log('error')\r\n      }\r\n    },\r\n  },\r\n  // extraReducers:(builder)=>{\r\n  //   builder\r\n  //     .addCase(searchCity.fulfilled,(state,action)=>{\r\n  //       console.log(action)\r\n  //     })\r\n  //     .addCase(searchCity.rejected,(state,action)=>{\r\n  //       console.log('error')\r\n  //     })\r\n  // }\r\n})\r\n\r\nconst {actions, reducer} = WeatherSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   searchCity\r\n} = actions;\r\n"]},"metadata":{},"sourceType":"module"}