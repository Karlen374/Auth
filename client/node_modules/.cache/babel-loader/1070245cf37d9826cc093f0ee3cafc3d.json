{"ast":null,"code":"import { createSerializableStateInvariantMiddleware, configureStore } from '@reduxjs/toolkit';\nimport login from '../components/loginPanel/LoginSlice';\nimport { Iterable } from 'immutable';\n\nconst stringMiddleware = () => next => action => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    });\n  }\n\n  return next(action);\n};\n\nconst store = configureStore({\n  reducer: {\n    login\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/store/index.js"],"names":["createSerializableStateInvariantMiddleware","configureStore","login","Iterable","stringMiddleware","next","action","type","store","reducer","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"mappings":"AAAA,SAASA,0CAAT,EAAoDC,cAApD,QAA0E,kBAA1E;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,MAAMC,gBAAgB,GAAG,MAAOC,IAAD,IAAWC,MAAD,IAAY;AACjD,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAOD,IAAI,CAAC;AACRE,MAAAA,IAAI,EAAED;AADE,KAAD,CAAX;AAGH;;AACD,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAPD;;AASA,MAAME,KAAK,GAAGP,cAAc,CAAC;AACzBQ,EAAAA,OAAO,EAAE;AAACP,IAAAA;AAAD,GADgB;AAEzBQ,EAAAA,UAAU,EAAEC,oBAAoB,IAAIA,oBAAoB,GAAGC,MAAvB,CAA8BR,gBAA9B,CAFX;AAGzBS,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAHV,CAAD,CAA5B;AAMA,eAAeR,KAAf","sourcesContent":["import { createSerializableStateInvariantMiddleware,configureStore } from '@reduxjs/toolkit';\r\nimport login from '../components/loginPanel/LoginSlice';\r\nimport { Iterable } from 'immutable'\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n    if (typeof action === 'string') {\r\n        return next({\r\n            type: action\r\n        })\r\n    }\r\n    return next(action)\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {login},\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n})\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}