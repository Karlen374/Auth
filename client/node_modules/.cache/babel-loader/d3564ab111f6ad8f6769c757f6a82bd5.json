{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {}\n};\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        console.log('зашли');\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    registrationUser: async (state, action) => {\n      try {\n        const response = await AuthService.registration(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response3, _e$response3$data;\n\n        console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n      }\n    },\n    checkAuth: async state => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/refresh`, {\n          withCredentials: true\n        }); //авторизован ли пользователь \n\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n        console.log('auth=', auth);\n      } catch (e) {\n        var _e$response4, _e$response4$data;\n\n        console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n      }\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser,\n  registrationUser,\n  logout,\n  checkAuth\n} = actions;","map":{"version":3,"sources":["C:/Users/User/Desktop/Auth/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","initialState","email","password","auth","user","LoginSlice","name","reducers","loginUser","state","action","response","login","payload","localStorage","setItem","data","accessToken","console","log","e","message","registrationUser","registration","logout","removeItem","checkAuth","get","withCredentials","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{}\r\n}\r\n\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        console.log('зашли')\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n    registrationUser:async(state,action)=>{\r\n    try {\r\n      const response = await AuthService.registration(action.payload.email, action.payload.password);\r\n      localStorage.setItem('token', response.data.accessToken);\r\n      state.auth=true;\r\n      state.user=response.data.user\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n    \r\n  checkAuth: async (state) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })//авторизован ли пользователь \r\n      localStorage.setItem('token', response.data.accessToken);\r\n      state.auth=true;\r\n      state.user=response.data.user\r\n      console.log('auth=',auth)\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message)\r\n    }\r\n  }\r\n\r\n  }\r\n\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n   loginUser,\r\n   registrationUser,\r\n   logout,\r\n   checkAuth\r\n} = actions;"]},"metadata":{},"sourceType":"module"}