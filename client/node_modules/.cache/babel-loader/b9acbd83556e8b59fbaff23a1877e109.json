{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {},\n  spinner: true\n};\nexport const checkAuth = createAsyncThunk('login/checkAuth', async () => {\n  const response = await axios.get(`http://localhost:5000/api/refresh`, {\n    withCredentials: true\n  });\n  return response;\n});\nexport const registrationUser = createAsyncThunk('login/registrationUser', async state => {\n  const response = await AuthService.registration(state.email, state.password);\n  return response;\n});\nexport const loginUser = createAsyncThunk('login/loginUser', async state => {\n  const response = await AuthService.login(state.email, state.password);\n  return response;\n});\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(checkAuth.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(checkAuth.rejected, (state, action) => {\n      var _action$error;\n\n      console.log(action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message);\n    }).addCase(registrationUser.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      state.auth = true;\n      state.spinner = false;\n      state.user = action.payload.data.user;\n    }).addCase(registrationUser.rejected, (state, action) => {\n      var _action$error2;\n\n      console.log(action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.message);\n    }).addCase(login.fulfilled, (state, action) => {\n      localStorage.setItem('token', response.data.accessToken);\n      state.auth = true;\n      state.user = response.data.user;\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  logout\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","createAsyncThunk","initialState","email","password","auth","user","spinner","checkAuth","response","get","withCredentials","registrationUser","state","registration","loginUser","login","LoginSlice","name","reducers","action","payload","localStorage","setItem","data","accessToken","e","console","log","message","logout","removeItem","extraReducers","builder","addCase","fulfilled","rejected","error","addDefaultCase","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{},\r\n  spinner:true\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'login/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nexport const registrationUser=createAsyncThunk(\r\n  'login/registrationUser',\r\n  async(state)=>{\r\n    const response = await AuthService.registration(state.email, state.password);\r\n    return response\r\n  }\r\n)\r\nexport const loginUser=createAsyncThunk(\r\n  'login/loginUser',\r\n  async(state)=>{\r\n    const response = await AuthService.login(state.email, state.password);\r\n    return response;\r\n  }\r\n)\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(registrationUser.fulfilled, (state,action)=>{\r\n          localStorage.setItem('token',action.payload.data.accessToken );\r\n          state.auth=true;\r\n          state.spinner=false;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(registrationUser.rejected,(state,action)=>{\r\n          console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(login.fulfilled,(state,action)=>{\r\n          localStorage.setItem('token', response.data.accessToken);\r\n          state.auth=true;\r\n          state.user=response.data.user\r\n        })\r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   logout,\r\n} = actions;"]},"metadata":{},"sourceType":"module"}