{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\svary\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Auth\\\\client\\\\src\\\\components\\\\charInfo\\\\CharInfo.js\",\n    _s = $RefreshSig$();\n\nimport './CharInfo.scss';\nimport { useState, useEffect } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Avatar from '@mui/material/Avatar';\nimport useMarvelServices from '../../services/MarvelServices';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharInfo = props => {\n  _s();\n\n  const [char, setChar] = useState(null);\n  const {\n    loading,\n    error,\n    getCharacter,\n    clearError\n  } = useMarvelServices();\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const onCharLoaded = char => {\n    setChar(char); //this.setState({ char,loading:false });//так как это вызывается как коллбек ниже то loading станет false как только данные загрузятся\n  };\n\n  const updateChar = () => {\n    clearError(); //для того чтобы была возможность поменять персонажа после того выскачет ошибка\n\n    const {\n      charId\n    } = props;\n    console.log(`CharId in Update=${charId}`);\n\n    if (!charId) {\n      return;\n    }\n\n    getCharacter(charId).then(onCharLoaded);\n  };\n\n  const sceleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Avatar, {\n    src: \"/broken-image.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 56\n  }, this); //если ничего у нас нет то мы будем загружать skeleton \n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 38\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 36\n  }, this) : null;\n  const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 55\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__info\",\n    children: [sceleton, errorMessage, spinner, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CharInfo, \"0kIJ3tWYpaaHZzmyxBk3fa458p8=\", false, function () {\n  return [useMarvelServices];\n});\n\n_c = CharInfo;\n\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  console.log(comics);\n  const content = comics.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comics.slice(0, 10).map((item, id) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/comics/${item.resourceURI.substr(item.resourceURI.indexOf(\"s/\") + 2)}`,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Not Data Yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = View;\nexport default CharInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CharInfo\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/charInfo/CharInfo.js"],"names":["useState","useEffect","Spinner","Avatar","useMarvelServices","Link","CharInfo","props","char","setChar","loading","error","getCharacter","clearError","updateChar","charId","onCharLoaded","console","log","then","sceleton","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","comics","length","slice","map","item","id","resourceURI","substr","indexOf"],"mappings":"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","sourcesContent":["import './CharInfo.scss';\r\nimport { useState,useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CharInfo =(props)=>{\r\n  const [char, setChar] = useState(null);\r\n  \r\n    \r\n   const {loading,error,getCharacter,clearError}= useMarvelServices();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n   \r\n  }, [props.charId])\r\n  \r\n  \r\n  const onCharLoaded = (char) => {\r\n    \r\n    setChar(char);\r\n        //this.setState({ char,loading:false });//так как это вызывается как коллбек ниже то loading станет false как только данные загрузятся\r\n    \r\n  }\r\n \r\n  const  updateChar=()=>{\r\n    clearError();//для того чтобы была возможность поменять персонажа после того выскачет ошибка\r\n    const { charId } = props;\r\n    console.log(`CharId in Update=${charId}`)\r\n          if(!charId){\r\n              return;\r\n          }\r\n          getCharacter(charId)\r\n                .then(onCharLoaded)\r\n                \r\n      }\r\n    \r\n        const sceleton= char || loading ||error ? null:<Avatar src=\"/broken-image.jpg\" />//если ничего у нас нет то мы будем загружать skeleton \r\n        const errorMessage = error ? <h2>Error</h2>: null;\r\n        const spinner = loading ?  <Spinner animation=\"border\" /> : null;\r\n        const content = !(loading || error|| !char) ? <View char={char} /> : null;\r\n        return (\r\n            <div className=\"char__info\">\r\n             {sceleton}\r\n             {errorMessage}\r\n             {spinner}\r\n             {content}\r\n            </div>\r\n        )\r\n    \r\n    \r\n}\r\n\r\nconst View=({char})=>{\r\n    const {name,description,thumbnail,homepage,wiki,comics}=char;\r\n    console.log(comics);\r\n    const content=comics.length ?  <>{\r\n                    \r\n        comics.slice(0,10).map((item,id)=>{\r\n            return(\r\n                <Link to={`/comics/${item.resourceURI.substr(item.resourceURI.indexOf(\"s/\")+2)}`}>\r\n                    <li key={id} className=\"char__comics-item\">\r\n                       {item.name}\r\n                    </li>\r\n                </Link>\r\n            )\r\n        })\r\n    }</>: <div>Not Data Yet</div>\r\n    return(\r\n        <>\r\n          <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                   {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                {content}\r\n                   \r\n                    \r\n                </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}