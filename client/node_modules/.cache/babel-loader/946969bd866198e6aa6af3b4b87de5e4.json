{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {}\n};\nexport const checkAuth = createAsyncThunk('heroes/checkAuth', async () => {\n  const response = await axios.get(`http://localhost:5000/api/refresh`, {\n    withCredentials: true\n  });\n  return response;\n});\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        console.log('зашли');\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    registrationUser: async (state, action) => {\n      try {\n        const response = await AuthService.registration(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n        console.log(`auth in store ${state.auth}`);\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response3, _e$response3$data;\n\n        console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(checkAuth.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      console.log(`action.data.accessToken=${action.payload.data.accessToken}`);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(checkAuth.rejected, (state, action) => {\n      console.log('error');\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser,\n  registrationUser,\n  logout\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","createAsyncThunk","initialState","email","password","auth","user","checkAuth","response","get","withCredentials","LoginSlice","name","reducers","loginUser","state","action","login","payload","localStorage","setItem","data","accessToken","console","log","e","message","registrationUser","registration","logout","removeItem","extraReducers","builder","addCase","fulfilled","rejected","addDefaultCase","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{}\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'heroes/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        console.log('зашли')\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n    registrationUser:async(state,action)=>{\r\n    try {\r\n      const response = await AuthService.registration(action.payload.email, action.payload.password);\r\n      localStorage.setItem('token', response.data.accessToken);\r\n      state.auth=true;\r\n      state.user=response.data.user\r\n      console.log(`auth in store ${state.auth}`)\r\n      \r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          console.log(`action.data.accessToken=${action.payload.data.accessToken}`)\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            console.log('error')\r\n        })\r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   loginUser,\r\n   registrationUser,\r\n   logout,\r\n} = actions;"]},"metadata":{},"sourceType":"module"}