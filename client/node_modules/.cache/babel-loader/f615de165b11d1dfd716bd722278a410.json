{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {}\n};\nexport const checkAuth = _s(createAsyncThunk('heroes/fetchHeroes', _s(async () => {\n  _s();\n\n  const {\n    request\n  } = useHttp();\n  return await request(\"http://localhost:3001/heroes\");\n}, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", true)), \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", true);\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        console.log('зашли');\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    registrationUser: async (state, action) => {\n      try {\n        const response = await AuthService.registration(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response3, _e$response3$data;\n\n        console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n      }\n    } // checkAuth:async(state) => {\n    //   try {\n    //     const response = await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })//авторизован ли пользователь \n    //     console.log(response)\n    //     localStorage.setItem('token', response.data.accessToken);\n    //     state.auth=true;\n    //     state.user=response.data.user\n    //   }\n    //   catch (e) {\n    //     console.log(e.response?.data?.message)\n    //   }\n    // }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser,\n  registrationUser,\n  logout //  checkAuth\n\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","createAsyncThunk","initialState","email","password","auth","user","checkAuth","request","useHttp","LoginSlice","name","reducers","loginUser","state","action","response","login","payload","localStorage","setItem","data","accessToken","console","log","e","message","registrationUser","registration","logout","removeItem","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{}\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'heroes/fetchHeroes',\r\n  async () => {\r\n      const {request} = useHttp();\r\n      return await request(\"http://localhost:3001/heroes\");\r\n  }\r\n);\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        console.log('зашли')\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n    registrationUser:async(state,action)=>{\r\n    try {\r\n      const response = await AuthService.registration(action.payload.email, action.payload.password);\r\n      localStorage.setItem('token', response.data.accessToken);\r\n      state.auth=true;\r\n      state.user=response.data.user\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  // checkAuth:async(state) => {\r\n  //   try {\r\n  //     const response = await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })//авторизован ли пользователь \r\n  //     console.log(response)\r\n  //     localStorage.setItem('token', response.data.accessToken);\r\n  //     state.auth=true;\r\n  //     state.user=response.data.user\r\n  //   }\r\n  //   catch (e) {\r\n  //     console.log(e.response?.data?.message)\r\n  //   }\r\n  // }\r\n  }\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   loginUser,\r\n   registrationUser,\r\n   logout,\r\n  //  checkAuth\r\n} = actions;"]},"metadata":{},"sourceType":"module"}