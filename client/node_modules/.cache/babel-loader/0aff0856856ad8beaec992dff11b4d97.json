{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: {}\n};\nexport const checkAuth = createAsyncThunk('login/checkAuth', async () => {\n  const response = await axios.get(`http://localhost:5000/api/refresh`, {\n    withCredentials: true\n  });\n  return response;\n});\nexport const registrationUser = createAsyncThunk('login/registrationUser', async state => {\n  const response = await AuthService.registration(state.email, state.password);\n  return response;\n});\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    },\n    logout: async state => {\n      try {\n        const response = await AuthService.logout();\n        localStorage.removeItem('token');\n        state.auth = false;\n        state.user = {};\n      } catch (e) {\n        var _e$response2, _e$response2$data;\n\n        console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(checkAuth.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(checkAuth.rejected, (state, action) => {\n      console.log();\n    }).addCase(registrationUser.fulfilled, (state, action) => {\n      localStorage.setItem('token', action.payload.data.accessToken);\n      state.auth = true;\n      state.user = action.payload.data.user;\n    }).addCase(registrationUser.rejected, (state, action) => {\n      console.log(action.error.message);\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser,\n  logout\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","createAsyncThunk","initialState","email","password","auth","user","checkAuth","response","get","withCredentials","registrationUser","state","registration","LoginSlice","name","reducers","loginUser","action","login","payload","localStorage","setItem","data","accessToken","e","console","log","message","logout","removeItem","extraReducers","builder","addCase","fulfilled","rejected","error","addDefaultCase","actions","reducer"],"mappings":"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","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{},\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'login/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nexport const registrationUser=createAsyncThunk(\r\n  'login/registrationUser',\r\n  async(state)=>{\r\n    const response = await AuthService.registration(state.email, state.password);\r\n    return response\r\n  }\r\n)\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    },\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      state.auth=false;\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            console.log()\r\n        })\r\n        .addCase(registrationUser.fulfilled, (state,action)=>{\r\n          localStorage.setItem('token',action.payload.data.accessToken );\r\n          state.auth=true;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(registrationUser.rejected,(state,action)=>{\r\n          console.log(action.error.message)\r\n        })\r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   loginUser,\r\n   logout,\r\n} = actions;"]},"metadata":{},"sourceType":"module"}