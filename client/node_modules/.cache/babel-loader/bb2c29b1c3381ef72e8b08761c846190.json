{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport axios from 'axios';\nimport { createSlice } from \"reduxjs/toolkit\";\nconst initialState = {\n  email: '',\n  password: '',\n  auth: false,\n  user: ''\n};\nconst LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    loginUser: async (state, action) => {\n      try {\n        const response = await AuthService.login(action.payload.email, action.payload.password);\n        console.log(response);\n        localStorage.setItem('token', response.data.accessToken);\n        state.auth = true;\n        state.user = response.data.user;\n      } catch (e) {\n        var _e$response, _e$response$data;\n\n        console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n      }\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = LoginSlice;\nexport default reducer;\nexport const {\n  loginUser\n} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/loginPanel/LoginSlice.js"],"names":["AuthService","axios","createSlice","initialState","email","password","auth","user","LoginSlice","name","reducers","loginUser","state","action","response","login","payload","console","log","localStorage","setItem","data","accessToken","e","message","actions","reducer"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,QAAQ,EAAC,EAFU;AAGnBC,EAAAA,IAAI,EAAC,KAHc;AAInBC,EAAAA,IAAI,EAAC;AAJc,CAArB;AAOA,MAAMC,UAAU,GAACN,WAAW,CAAC;AAC3BO,EAAAA,IAAI,EAAC,OADsB;AAE3BN,EAAAA,YAF2B;AAG3BO,EAAAA,QAAQ,EAAC;AACPC,IAAAA,SAAS,EAAC,OAAMC,KAAN,EAAYC,MAAZ,KAAqB;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACe,KAAZ,CAAkBF,MAAM,CAACG,OAAP,CAAeZ,KAAjC,EAAwCS,MAAM,CAACG,OAAP,CAAeX,QAAvD,CAAvB;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAK,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACO,IAAT,CAAcC,WAA5C;AACAV,QAAAA,KAAK,CAACN,IAAN,GAAW,IAAX;AACAM,QAAAA,KAAK,CAACL,IAAN,GAAWO,QAAQ,CAACO,IAAT,CAAcd,IAAzB;AACD,OAND,CAOA,OAAOgB,CAAP,EAAU;AAAA;;AACRN,QAAAA,OAAO,CAACC,GAAR,gBAAYK,CAAC,CAACT,QAAd,oEAAY,YAAYO,IAAxB,qDAAY,iBAAkBG,OAA9B;AACD;AACF;AAZM;AAHkB,CAAD,CAA5B;AAmBA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBlB,UAA3B;AAEA,eAAekB,OAAf;AACA,OAAO,MAAM;AACVf,EAAAA;AADU,IAETc,OAFG","sourcesContent":["import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice} from \"reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:''\r\n}\r\n\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n    loginUser:async(state,action)=>{\r\n      try {\r\n        const response = await AuthService.login(action.payload.email, action.payload.password);\r\n        console.log(response)\r\n        localStorage.setItem('token', response.data.accessToken);\r\n        state.auth=true;\r\n        state.user=response.data.user\r\n      }\r\n      catch (e) {\r\n        console.log(e.response?.data?.message);\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n   loginUser\r\n} = actions;"]},"metadata":{},"sourceType":"module"}