{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\";\nimport useMarvelServices from \"../../services/MarvelServices\";\nconst initialState = {\n  data: [],\n  newItemLoading: false,\n  offset: 211,\n  charEnded: false,\n  selectedId: -1,\n  firstUpd: true\n};\nexport const getData = _s(createAsyncThunk('char/getData', _s(async state => {\n  _s();\n\n  console.log(state);\n  const {\n    getAllCharacters\n  } = useMarvelServices(); // const { getAllCharacters }=useMarvelServices();\n\n  const response = await getAllCharacters(state);\n  return response;\n}, \"ibinA0o7PGIUE+uvC9S9Hem2yjg=\", false, function () {\n  return [useMarvelServices];\n})), \"ibinA0o7PGIUE+uvC9S9Hem2yjg=\", false, function () {\n  return [useMarvelServices];\n});\nconst CharSlice = createSlice({\n  name: 'char',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getData.pending, (state, action) => {\n      // console.log('Loading Character')\n      state.newItemLoading = false;\n    }).addCase(getData.fulfilled, (state, action) => {\n      state.data = [...state.data, ...action.payload];\n      console.log(state.data);\n      state.newItemLoading = false;\n      state.offset = state.offset + 9;\n      state.firstUpd = false;\n      state.charEnded;\n      setNewItemLoading(newItemLoading => false);\n      setOffset(offset => offset + 9);\n      setFirstUpd(false);\n      setCharEnded(charEnded => ended);\n    }).addCase(getData.rejected, (state, action) => {\n      var _action$error;\n\n      console.log(action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message);\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = CharSlice;\nexport default reducer;\nexport const {} = actions;","map":{"version":3,"sources":["C:/Users/svary/OneDrive/Рабочий стол/Auth/client/src/components/charList/CharSlice.js"],"names":["createSlice","createAsyncThunk","current","useMarvelServices","initialState","data","newItemLoading","offset","charEnded","selectedId","firstUpd","getData","state","console","log","getAllCharacters","response","CharSlice","name","reducers","extraReducers","builder","addCase","pending","action","fulfilled","payload","setNewItemLoading","setOffset","setFirstUpd","setCharEnded","ended","rejected","error","message","actions","reducer"],"mappings":";;AAAA,SAAQA,WAAR,EAAoBC,gBAApB,EAAqCC,OAArC,QAAmD,kBAAnD;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,cAAc,EAAC,KAFI;AAGnBC,EAAAA,MAAM,EAAC,GAHY;AAInBC,EAAAA,SAAS,EAAC,KAJS;AAKnBC,EAAAA,UAAU,EAAC,CAAC,CALO;AAMnBC,EAAAA,QAAQ,EAAC;AANU,CAArB;AASA,OAAO,MAAMC,OAAO,MAACV,gBAAgB,CACnC,cADmC,KAEnC,MAAMW,KAAN,IAAc;AAAA;;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAACG,IAAAA;AAAD,MAAmBZ,iBAAiB,EAA1C,CAFY,CAGZ;;AACA,QAAMa,QAAQ,GAAC,MAAMD,gBAAgB,CAACH,KAAD,CAArC;AACA,SAAOI,QAAP;AACD,CARkC;AAAA,UAIRb,iBAJQ;AAAA,GAAjB;AAAA,UAISA,iBAJT;AAAA,EAAb;AAWP,MAAMc,SAAS,GAACjB,WAAW,CAAC;AAC1BkB,EAAAA,IAAI,EAAC,MADqB;AAE1Bd,EAAAA,YAF0B;AAG1Be,EAAAA,QAAQ,EAAE,EAHgB;AAM1BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWX,OAAO,CAACY,OADnB,EAC2B,CAACX,KAAD,EAAOY,MAAP,KAAgB;AACvC;AACAZ,MAAAA,KAAK,CAACN,cAAN,GAAqB,KAArB;AACD,KAJH,EAKGgB,OALH,CAKWX,OAAO,CAACc,SALnB,EAK6B,CAACb,KAAD,EAAOY,MAAP,KAAgB;AACzCZ,MAAAA,KAAK,CAACP,IAAN,GAAW,CAAC,GAAGO,KAAK,CAACP,IAAV,EAAe,GAAGmB,MAAM,CAACE,OAAzB,CAAX;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACP,IAAlB;AACAO,MAAAA,KAAK,CAACN,cAAN,GAAqB,KAArB;AACAM,MAAAA,KAAK,CAACL,MAAN,GAAaK,KAAK,CAACL,MAAN,GAAa,CAA1B;AACAK,MAAAA,KAAK,CAACF,QAAN,GAAe,KAAf;AACAE,MAAAA,KAAK,CAACJ,SAAN;AACJmB,MAAAA,iBAAiB,CAACrB,cAAc,IAAE,KAAjB,CAAjB;AACAsB,MAAAA,SAAS,CAACrB,MAAM,IAAEA,MAAM,GAAC,CAAhB,CAAT;AACAsB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,YAAY,CAACtB,SAAS,IAAEuB,KAAZ,CAAZ;AACG,KAhBH,EAiBGT,OAjBH,CAiBWX,OAAO,CAACqB,QAjBnB,EAiB4B,CAACpB,KAAD,EAAOY,MAAP,KAAgB;AAAA;;AACxCX,MAAAA,OAAO,CAACC,GAAR,CAAYU,MAAZ,aAAYA,MAAZ,wCAAYA,MAAM,CAAES,KAApB,kDAAY,cAAeC,OAA3B;AACD,KAnBH;AAqBH;AA5B2B,CAAD,CAA3B;AA+BA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqBnB,SAA3B;AAEA,eAAemB,OAAf;AAEA,OAAO,MAAM,KAETD,OAFG","sourcesContent":["import {createSlice,createAsyncThunk,current} from \"@reduxjs/toolkit\"\r\nimport useMarvelServices from \"../../services/MarvelServices\"\r\n\r\nconst initialState = {\r\n  data:[],\r\n  newItemLoading:false,\r\n  offset:211,\r\n  charEnded:false,\r\n  selectedId:-1,\r\n  firstUpd:true,\r\n}\r\n\r\nexport const getData=createAsyncThunk(\r\n  'char/getData',\r\n  async(state)=>{\r\n    console.log(state)\r\n    const {getAllCharacters}=useMarvelServices();\r\n    // const { getAllCharacters }=useMarvelServices();\r\n    const response=await getAllCharacters(state)\r\n    return response;\r\n  }\r\n)\r\n\r\nconst CharSlice=createSlice({\r\n  name:'char',\r\n  initialState,\r\n  reducers: {\r\n      \r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getData.pending,(state,action)=>{\r\n        // console.log('Loading Character')\r\n        state.newItemLoading=false\r\n      })\r\n      .addCase(getData.fulfilled,(state,action)=>{\r\n        state.data=[...state.data,...action.payload]\r\n        console.log(state.data)\r\n        state.newItemLoading=false\r\n        state.offset=state.offset+9\r\n        state.firstUpd=false;\r\n        state.charEnded\r\n    setNewItemLoading(newItemLoading=>false);\r\n    setOffset(offset=>offset+9);\r\n    setFirstUpd(false);\r\n    setCharEnded(charEnded=>ended);\r\n      })\r\n      .addCase(getData.rejected,(state,action)=>{\r\n        console.log(action?.error?.message)\r\n      })\r\n       \r\n}\r\n})\r\n\r\nconst {actions, reducer} = CharSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  \r\n} = actions;"]},"metadata":{},"sourceType":"module"}