[{"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\index.js":"1","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\app\\App.js":"2","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\AuthService.js":"3","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\http.hook.js":"4","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginSlice.js":"5","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\store\\index.js":"6","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\homePanel\\homePanel.js":"7","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginPanel.js":"8","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\signInPanel\\signInPanel.js":"9","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherList.js":"10","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherSlice.js":"11","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\WeatherApi.js":"12","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\useHttp.js":"13","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherList.js":"14","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherSlice.js":"15","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherItems\\WeatherItems.js":"16","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherInfo\\WeatherInfo.js":"17","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ValueSlice.js":"18","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\ConversionApi.js":"19","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\exchangeValue.js":"20","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ExchangeValue.js":"21","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\appHeader\\AppHeader.js":"22","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\IpApi.js":"23","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\Modal\\Modal.js":"24","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\pages\\MarvelPage.js":"25","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\charList.js":"26","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\MarvelServices.js":"27","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\CharList.js":"28","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charInfo\\CharInfo.js":"29","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\randomChar\\RandomChar.js":"30","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\sceleton\\Sceleton.js":"31","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\CharSlice.js":"32","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodSearch\\FoodSearch.js":"33","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\Edamam.js":"34","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodSearch\\FoodSlice.js":"35","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodItems\\FoodItems.js":"36","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodInfo\\FoodInfo.js":"37"},{"size":364,"mtime":1648524317830,"results":"38","hashOfConfig":"39"},{"size":1306,"mtime":1649027819265,"results":"40","hashOfConfig":"39"},{"size":467,"mtime":1647112909911,"results":"41","hashOfConfig":"39"},{"size":382,"mtime":1647112909869,"results":"42","hashOfConfig":"39"},{"size":2811,"mtime":1648345036519,"results":"43","hashOfConfig":"39"},{"size":786,"mtime":1648778272073,"results":"44","hashOfConfig":"39"},{"size":363,"mtime":1648769640103,"results":"45","hashOfConfig":"39"},{"size":2362,"mtime":1648770050777,"results":"46","hashOfConfig":"39"},{"size":1813,"mtime":1648770614928,"results":"47","hashOfConfig":"39"},{"size":3305,"mtime":1647963098390,"results":"48","hashOfConfig":"39"},{"size":1071,"mtime":1647963720663,"results":"49","hashOfConfig":"39"},{"size":2058,"mtime":1648347788562,"results":"50","hashOfConfig":"39"},{"size":455,"mtime":1648514872943,"results":"51","hashOfConfig":"39"},{"size":2577,"mtime":1648770829128,"results":"52","hashOfConfig":"39"},{"size":3634,"mtime":1648775199787,"results":"53","hashOfConfig":"39"},{"size":2191,"mtime":1648774768349,"results":"54","hashOfConfig":"39"},{"size":1651,"mtime":1648867448782,"results":"55","hashOfConfig":"39"},{"size":1660,"mtime":1648602427324,"results":"56","hashOfConfig":"39"},{"size":766,"mtime":1648178916558,"results":"57","hashOfConfig":"39"},{"size":2905,"mtime":1648262367323,"results":"58","hashOfConfig":"39"},{"size":2737,"mtime":1648786552417,"results":"59","hashOfConfig":"39"},{"size":1958,"mtime":1649118488483,"results":"60","hashOfConfig":"39"},{"size":536,"mtime":1648867221183,"results":"61","hashOfConfig":"39"},{"size":500,"mtime":1649117634952,"results":"62","hashOfConfig":"39"},{"size":484,"mtime":1648683752525,"results":"63","hashOfConfig":"39"},{"size":2190,"mtime":1648691870860,"results":"64","hashOfConfig":"39"},{"size":2533,"mtime":1648766570995,"results":"65","hashOfConfig":"39"},{"size":2190,"mtime":1648691870860,"results":"66","hashOfConfig":"39"},{"size":2681,"mtime":1648691384868,"results":"67","hashOfConfig":"39"},{"size":2601,"mtime":1648767414690,"results":"68","hashOfConfig":"39"},{"size":684,"mtime":1648523961690,"results":"69","hashOfConfig":"39"},{"size":2517,"mtime":1648767031782,"results":"70","hashOfConfig":"39"},{"size":1942,"mtime":1649138594945,"results":"71","hashOfConfig":"39"},{"size":781,"mtime":1648784014313,"results":"72","hashOfConfig":"39"},{"size":1501,"mtime":1649138273180,"results":"73","hashOfConfig":"39"},{"size":3746,"mtime":1649138586883,"results":"74","hashOfConfig":"39"},{"size":2340,"mtime":1649129682015,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1nsj7la",{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"79"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"79"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"79"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"79"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"79"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"79"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\index.js",[],[],["201","202"],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\app\\App.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\AuthService.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\http.hook.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginSlice.js",["203"],[],"import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{},\r\n  spinner:false\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'login/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nexport const registrationUser=createAsyncThunk(\r\n  'login/registrationUser',\r\n  async(state)=>{\r\n    const response = await AuthService.registration(state.email, state.password);\r\n    return response\r\n  }\r\n)\r\nexport const loginUser=createAsyncThunk(\r\n  'login/loginUser',\r\n  async(state)=>{\r\n    const response = await AuthService.login(state.email, state.password);\r\n    return response;\r\n  }\r\n)\r\n\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('data');\r\n      state.auth=false;\r\n      console.log(state.auth)\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.pending,(state)=>{\r\n          state.spinner=true;\r\n        })\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.spinner=false;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            state.spinner=false;\r\n            console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(registrationUser.pending,(state)=>{\r\n          state.spinner=true;\r\n        })\r\n        .addCase(registrationUser.fulfilled, (state,action)=>{\r\n          localStorage.setItem('token',action.payload.data.accessToken );\r\n          state.auth=true;\r\n          state.spinner=false;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(registrationUser.rejected,(state,action)=>{\r\n          console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(loginUser.fulfilled,(state,action)=>{\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.user=action.payload.data.user\r\n        })\r\n        .addCase(loginUser.rejected,(state,action)=>{\r\n          console.log(action?.error?.message)\r\n        })\r\n\r\n        \r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   logout,\r\n} = actions;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\store\\index.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\homePanel\\homePanel.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginPanel.js",["204"],[],"import Button from 'react-bootstrap/Button'\r\nimport { useEffect,useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './LoginPanel.scss'\r\nimport { checkAuth,logout,registrationUser, } from './LoginSlice';\r\nimport {NavLink } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst LoginPanel = () => {\r\n\r\n  const [email,setEmail]=useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch=useDispatch()\r\n  const {auth,user,spinner} = useSelector(store => store.login);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(localStorage.getItem('token')){\r\n      dispatch(checkAuth())\r\n    }\r\n  },[])\r\n\r\n  const registration =  (email, password) => {\r\n    const User = {\r\n      email,\r\n      password,\r\n    }\r\n    dispatch(registrationUser(User))\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const Content=auth ? ` Пользователь ${user.email} авторизован `:<h3>Create your account</h3>;\r\n  \r\n  if (spinner){\r\n    return(\r\n      <Spinner animation=\"border\" />\r\n    )\r\n  }\r\n\r\n  if (auth){\r\n    return(\r\n      <>\r\n          <h2>{user.isActivated ? 'Аккаунт активирован ':'Активируйте аккаунт'}</h2>\r\n          {Content}\r\n         <Button onClick={()=>{dispatch(logout())}} variant=\"outline-success\">Log Out</Button>{' '}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='LoginPanel'>\r\n    {Content}\r\n      <div className=\"text-field\">\r\n        <label className=\"text-field__label\">Email</label>\r\n        <input onChange={(e) => setEmail(e.target.value)} className=\"text-field__input\" type=\"email\"  placeholder=\"Email\" value={email}/>\r\n      </div>\r\n      \r\n      <div className=\"text-field\">\r\n          <label className=\"text-field__label\">Password</label>\r\n          <input onChange={(e) => setPassword(e.target.value)} className=\"text-field__input\" type=\"password\"  placeholder=\"*****\" value={password}/>\r\n      </div>\r\n    \r\n     \r\n      <Button onClick={() => registration(email, password)} variant=\"outline-success\" type='submit'>Sign Up</Button>{' '}\r\n      <h5>Already have an account ? <NavLink to='/'>Sign in</NavLink></h5>\r\n      <NavLink  style={({isActive})=>({color:isActive?'#9f0013':'inherit'})} to=\"/Home\"><Button variant=\"outline-success\">HomePage</Button>{' '}</NavLink>\r\n    </div>\r\n  )\r\n}\r\nexport default LoginPanel;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\signInPanel\\signInPanel.js",["205","206"],[],"import './signInPanel.scss'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useEffect,useState } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { loginUser } from '../loginPanel/LoginSlice';\r\nimport {NavLink } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst SignInPanel=()=>{\r\nconst [email,setEmail]=useState('')\r\nconst [password,setPassword]=useState('')\r\nconst dispatch=useDispatch()\r\nconst {auth}=useSelector((state)=>state.login)\r\n\r\nconst  login=(email,password)=>{\r\n  const User = {\r\n    email,\r\n    password,\r\n  }\r\n  console.log(`auth=${auth}`)\r\n  dispatch(loginUser(User))\r\n  console.log(`auth=${auth}`)\r\n  \r\n  setEmail('')\r\n  setPassword('')\r\n}\r\nif (auth) window.location.assign('http://localhost:3000/weatherList')\r\n  return(\r\n    <div className='SignIn'>\r\n    <h3>Log in to your account</h3>\r\n     <div className=\"text-field\">\r\n        <label className=\"text-field__label\">Email</label>\r\n        <input onChange={(e) => setEmail(e.target.value)} className=\"text-field__input\" type=\"email\"  placeholder=\"Email\" value={email}/>\r\n      </div>\r\n      \r\n      <div className=\"text-field\">\r\n          <label className=\"text-field__label\">Password</label>\r\n          <input onChange={(e) => setPassword(e.target.value)} className=\"text-field__input\" type=\"password\"  placeholder=\"*****\" value={password}/>\r\n      </div>\r\n    \r\n     \r\n      <Button onClick={() => login(email, password)} variant=\"outline-success\" type='submit'>Sign In</Button>{' '}\r\n      <h5>Don't have an account ? <NavLink to='/registration'>Sign up</NavLink></h5>\r\n      <NavLink  style={({isActive})=>({color:isActive?'#9f0013':'inherit'})} to=\"/Home\"><Button variant=\"outline-success\">HomePage</Button>{' '}</NavLink>\r\n    </div>\r\n  )\r\n}\r\nexport default SignInPanel;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherList.js",["207","208","209","210","211"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherSlice.js",["212"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\WeatherApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\useHttp.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherList.js",["213","214","215","216"],[],"import './WeatherList.scss'\r\nimport { useEffect ,useState} from \"react\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {searchCity,localCity, addUserCity,closeModal} from './WeatherSlice';\r\nimport WeatherItems from '../weatherItems/WeatherItems';\r\nimport useWeatherServices from '../../services/WeatherApi';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Modal from '../Modal/Modal'\r\n\r\nconst WeatherList=()=>{\r\n\r\nconst [weatherCity,setWeatherCity]=useState('')\r\nconst {userCity,loading,modalActive,firstUpd} = useSelector(store => store.weather);\r\nconst dispatch=useDispatch()\r\nconst { getAutoCompleteCityName } = useWeatherServices();\r\nconst [variables,setVariables]=useState([])\r\n\r\n\r\nconst onUpdateCity=(e)=>{\r\n  setWeatherCity(e.target.value)\r\n}\r\n\r\nuseEffect(()=>{\r\n  if(localStorage.getItem('data') && firstUpd){\r\n  const data=localStorage.getItem('data').split(',')\r\n  for(let i=0;i<data.length;i++){\r\n    if(data[i]) dispatch(searchCity(data[i]))\r\n  } \r\n}\r\ndispatch(localCity())\r\n},[])\r\n\r\nuseEffect(async()=>{\r\n  if(weatherCity.length>3) {\r\n    const response= await getAutoCompleteCityName(weatherCity)\r\n    setVariables(response)\r\n  }\r\n},[weatherCity])\r\n\r\nconst addCity=()=>{\r\n  dispatch(searchCity(weatherCity))\r\n  setWeatherCity('')\r\n}\r\n\r\n\r\nconst content=loading ? <Spinner animation=\"border\" />:<WeatherItems/>\r\nreturn(\r\n  <>\r\n  <Modal active={modalActive} >\r\n    <h2 className='modal__header'>Is your city {userCity} ?</h2>\r\n    <Button onClick={()=>{dispatch(addUserCity(userCity))}}  className='modal__btn' variant=\"success\">Yes</Button>\r\n    <Button onClick={()=>{dispatch(closeModal())}} className='modal__btn' variant=\"danger\">No</Button>\r\n  </Modal>\r\n\r\n  <div className=\"search-panel\">\r\n     <h3>Add...</h3>   \r\n    <Stack spacing={2} sx={{ width: 300 }}>\r\n      <Autocomplete\r\n        id=\"free-solo-demo\"\r\n        freeSolo\r\n        options={variables.map((option) => option.name)}\r\n        renderInput={(params) => <TextField {...params} \r\n                                            value={weatherCity}\r\n                                            onChange={onUpdateCity} \r\n                                            label=\"Add...\" />}\r\n      />\r\n     \r\n    </Stack>\r\n    \r\n    <Button onClick={addCity} variant=\"outline-success\">Add</Button>{' '}\r\n\r\n  </div>\r\n  \r\n  {content}\r\n\r\n  </>\r\n)\r\n  \r\n\r\n}\r\nexport default WeatherList;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherSlice.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherItems\\WeatherItems.js",["217","218"],[],"import './WeatherItems.scss'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {delCity} from '../weatherList/WeatherSlice';\r\nimport { useEffect } from 'react';\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst WeatherItems=()=>{\r\n  const dispatch=useDispatch()\r\n  const {data}= useSelector(store => store.weather);\r\n  \r\n  const cityDelete=(index)=>{\r\n    dispatch(delCity(index))\r\n  }\r\n      \r\n  return(\r\n    <ItemsList data={data} cityDelete={cityDelete}/>\r\n  )\r\n\r\n}\r\n\r\nconst ItemsList=({data,cityDelete})=>{\r\n  const Elements=data.map((item,id)=>{\r\n    return(\r\n      <ListItem\r\n      key={id}\r\n      name={item.name}\r\n      country={item.country}\r\n      localTime={item.localTime}\r\n      img={item.condImg}\r\n      tempC={item.tempC}\r\n      tempF={item.tempF}\r\n      cityDelete={()=>cityDelete(id)}\r\n      />\r\n    )\r\n  })\r\n  return(\r\n    <>\r\n    {Elements}\r\n    </>\r\n  )\r\n}\r\nconst ListItem=({name,country,localTime,img,tempC,tempF,cityDelete})=>{\r\n  return(\r\n    \r\n    <div className='weatherItem'>\r\n        \r\n      <div className='cityInformation'>\r\n        <div>City-{name}</div>\r\n         <div>Country - {country}</div>\r\n         <div>Local Time - {localTime}</div>\r\n      </div>\r\n        \r\n                                                                                                                                                                                                                                                                                                                                                                                                  \r\n      <div className='Temp'>\r\n        <div className='delButton'>\r\n            <CloseButton onClick={cityDelete} />\r\n            <Link style={{'text-decoration':'none'}}  to={`/${name}`}>\r\n                  <button className='info'> ↗</button>\r\n            </Link> \r\n        </div>\r\n         <img src={img} alt='weather img'></img>\r\n        <div>\r\n            <span>{tempC}C° </span>\r\n            <span>{tempF}F° </span>\r\n        </div>\r\n       \r\n      </div>\r\n     \r\n    </div>\r\n   \r\n  \r\n  )\r\n}\r\nexport default WeatherItems","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherInfo\\WeatherInfo.js",["219","220","221"],[],"import './WeatherInfo.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useEffect,useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {weatherInfo} from '../weatherList/WeatherSlice';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\n\r\n\r\nconst WeatherInfo =()=>{\r\n\r\n  const {city}=useParams()\r\n  const dispatch=useDispatch()\r\n  const {cityInfo,infoLoading} = useSelector(store => store.weather);\r\n  \r\n  useEffect(()=>{\r\n    dispatch(weatherInfo(city))\r\n  },[city])\r\n  \r\n  const content=infoLoading?<div className=\"Spinner\"><Spinner  animation=\"border\" /></div>:<View data={cityInfo}/>;\r\n\r\n  \r\n  return(\r\n    <>\r\n    <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content={`${city} weather`}\r\n        />\r\n        <title>{city}</title>\r\n    </Helmet>\r\n    {content}\r\n    </>\r\n  )\r\n}\r\nconst View=({data})=>{\r\n  return(\r\n    <div className=\"weatherBlock Block\">\r\n    <h3>{data.name} ({data.country})</h3> \r\n    <h4>Date: {data.day}</h4>\r\n    <div>Sunrise: {data.sunrise1}</div>\r\n    <div>Sunset: { data.sunset1}</div>\r\n    <div className=\"weatherByDays\">\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day1} </h4>\r\n          <span>Max Temp {data.day1MaxTempC}C°</span>\r\n          <span>Min Temp {data.day1MinTempC}C°</span>\r\n        </div>\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day2}</h4>\r\n          <span>Max Temp {data.day2MaxTempC}C°</span>\r\n          \r\n          <span>Min Temp {data.day2MinTempC}C°</span>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default WeatherInfo;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ValueSlice.js",["222","223"],[],"import {createSlice,createAsyncThunk,current} from \"@reduxjs/toolkit\"\r\nimport useConversionServices from '../../services/ConversionApi'\r\nimport useMarvelServices from \"../../services/MarvelServices\"\r\n\r\nconst initialState = {\r\n  currency:'1',\r\n  convertCurrency:'',\r\n  inputVal:'USD',\r\n  convertVal:'RUB',\r\n  spinner:false,\r\n  result:false\r\n}\r\nexport const changeValue=createAsyncThunk(\r\n  'value/changeValue',\r\n  async(state)=>{\r\n    const {getConvertValue}=useConversionServices();\r\n    const response=getConvertValue(state)\r\n    return response\r\n  }\r\n\r\n)\r\n\r\nconst ValueSlice=createSlice({\r\n  name:'value',\r\n  initialState,\r\n  reducers: {\r\n      changeInputValue:(state,action)=>{\r\n        state.inputVal=action.payload\r\n        \r\n      },\r\n      changeConvertValue:(state,action)=>{\r\n        state.convertVal=action.payload;\r\n        \r\n      },\r\n      onUpdateLocal:(state,action)=>{\r\n        state.currency=action.payload;\r\n        state.result=false;\r\n      }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(changeValue.pending,(state,action)=>{\r\n        state.spinner=true\r\n      })\r\n      .addCase(changeValue.fulfilled,(state,action)=>{\r\n        console.log(state.convertVal)\r\n        state.convertCurrency=action.payload.data[state.convertVal].value*state.currency\r\n        state.spinner=false\r\n        state.result=true\r\n        \r\n      \r\n      })\r\n      .addCase(changeValue.rejected,(state,action)=>{\r\n        console.log('error')\r\n      })\r\n       \r\n       \r\n}\r\n})\r\n\r\nconst {actions, reducer} = ValueSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  changeConvertValue,\r\n  changeInputValue,\r\n  onUpdateLocal\r\n} = actions;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\ConversionApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\exchangeValue.js",["224"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ExchangeValue.js",["225"],[],"import './ExchangeValue.scss'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useState ,useEffect} from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport {changeValue,changeConvertValue,changeInputValue,onUpdateLocal} from './ValueSlice.js'\r\n\r\n\r\nconst ExchangeValue=()=>{\r\n\r\nconst [currency,setCurrency]=useState('1');\r\nconst [inputVal,setInputVal]=useState('USD');\r\nconst [convertVal,setConvertVal]=useState('RUB')\r\nconst {spinner,result,convertCurrency}=useSelector(store=>store.value)\r\nconst dispatch=useDispatch()\r\n\r\nconst request=()=>{\r\n  dispatch(changeValue(inputVal))\r\n  \r\n}\r\n\r\n useEffect(()=>{\r\n  dispatch(changeInputValue(inputVal))\r\n  dispatch(changeConvertValue(convertVal))\r\n  request();\r\n },[convertVal,inputVal,currency])\r\n\r\nconst changeInputVal=(e)=>{\r\n  setInputVal(e.target.value)\r\n}\r\nconst changeConvertVal=(e)=>{\r\n  setConvertVal(e.target.value)\r\n}\r\n\r\nconst onUpdate=(e)=>{\r\n  const currency=e.target.value;\r\n  setCurrency(currency);\r\n  dispatch(onUpdateLocal(currency))\r\n  \r\n}\r\n\r\nconst spinnerView=spinner?  <Spinner animation=\"border\" size='sm' variant=\"dark\" />:null;\r\nconst content=result?<Result currency={currency} inputVal={inputVal} convertCurrency={convertCurrency} convertVal={convertVal}/>:null;\r\n\r\nreturn(\r\n    <>\r\n    <h2 className='Page_Name'>Convert</h2>\r\n    <div className='convert'>\r\n    <div className='convertBlock'>\r\n      <label>From\r\n    <select value={inputVal} onChange={changeInputVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n\r\n    </select>\r\n    </label>\r\n    <label>Amount\r\n    <input type=\"number\"\r\n            className=\"convert_input\"\r\n            placeholder=\"...\"\r\n            value={currency}\r\n            onChange={onUpdate}\r\n            />\r\n    </label>   \r\n            <label> To\r\n     <select value={convertVal} onChange={changeConvertVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n    </select>\r\n    </label>\r\n    \r\n    </div>\r\n    <div className='convertResult'>\r\n      <button onClick={request}> Convert {spinnerView} </button>\r\n      {content}\r\n    </div>\r\n    </div>\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nconst Result=({currency,inputVal,convertCurrency,convertVal})=>{\r\n  return(\r\n    <div>{currency} {inputVal} is {convertCurrency} {convertVal}</div> \r\n  )\r\n}\r\nexport default ExchangeValue;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\appHeader\\AppHeader.js",["226","227"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\IpApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\Modal\\Modal.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\pages\\MarvelPage.js",["228"],[],"import CharInfo from '../charInfo/CharInfo';\r\nimport CharList from '../charList/CharList'\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport { useState } from 'react';\r\nimport './MarvelPage.scss'\r\n\r\nconst MarvelPage=()=>{\r\n \r\n  return(\r\n    <div className=\"Marvel__Page\">\r\n      <RandomChar/>\r\n    \r\n      <div className=\"char__content\">\r\n                  <CharList  />\r\n                  <CharInfo />         \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarvelPage;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\charList.js",["229"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\MarvelServices.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\CharList.js",["230","231","232","233"],[],"import './charList.scss';\r\nimport {useState,useEffect} from 'react'\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { getData,focusOnItem } from './CharSlice';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\n\r\nconst CharList =()=>{\r\n  const [offset,setOffset]=useState(211);\r\n  const {data,newItemLoading,charEnded,selectedId,firstUpd}=useSelector(store=>store.char)\r\n  const dispatch=useDispatch()\r\n  \r\n  useEffect(() => {\r\n    if (firstUpd) onRequest()\r\n  },[])\r\n\r\n  \r\n  const onRequest = () => {\r\n    setOffset(offset=>offset+9)\r\n    dispatch(getData(offset))\r\n  }\r\n\r\n {\r\n    const content =  <Element selectedId={selectedId}  data={data}    />;\r\n    return (\r\n      \r\n      <div className=\"char__list\">\r\n        {content}    \r\n          <button onClick={() => onRequest(offset)} disabled={newItemLoading} style={{ 'display':!charEnded?'none':'block'}} className=\"button button__main button__long\">\r\n              <div className=\"inner\">load more</div>\r\n          </button>\r\n      </div>\r\n    )\r\n  }\r\n   \r\n}\r\n\r\nconst Element = ({ data,selectedId}) => {\r\n  const dispatch=useDispatch()\r\n  const elements = data.map((item) => {\r\n    const active = (item.id === selectedId);\r\n    const ourClass=active?'char__item char__item_selected':'char__item'\r\n    return(\r\n      <ElementItem\r\n        key={item.id}\r\n        {...item}\r\n        ourClass={ourClass}\r\n        focusOnItem={()=>dispatch(focusOnItem(item.id))}    \r\n      />\r\n    )\r\n      \r\n  })\r\n  return(\r\n    <ul className=\"char__grid\">\r\n        {elements}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst ElementItem=(props)=>{\r\n  const { name, thumbnail,focusOnItem,ourClass} = props;\r\n  let CharImg = \"char__item__img\" ;\r\n  if (thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg=\"char__item__no__img\"\r\n  \r\n  return(\r\n    <li   tabIndex={0}\r\n          \r\n          onClick={() => {\r\n            focusOnItem();\r\n          }}\r\n          className={ourClass}>\r\n          <img className={CharImg} src={thumbnail} alt=\"abyss\"/>\r\n          <div className=\"char__name\">{name}</div>\r\n    </li> \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default CharList;\r\n","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charInfo\\CharInfo.js",["234","235","236"],[],"import './CharInfo.scss';\r\nimport { useState,useEffect } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Sceleton from '../sceleton/Sceleton';\r\nimport {Link} from 'react-router-dom';\r\nimport {getInfoCharacter} from '../charList/CharSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst CharInfo =()=>{\r\n  const {infoChar,selectedId,loading,error}=useSelector(store=>store.char)\r\n  const dispatch=useDispatch();\r\n  \r\n  useEffect(() => {\r\n    updateChar();\r\n    console.log(infoChar)\r\n  }, [selectedId])\r\n  \r\n  const  updateChar=()=>{\r\n          if(!selectedId){\r\n              return;\r\n          }\r\n    dispatch(getInfoCharacter(selectedId))  \r\n    }\r\n    \r\n    const sceleton= selectedId || loading || error ? null:<Sceleton/>\r\n    const errorMessage = error ? <h2>Error</h2>: null;\r\n    const spinner = loading ?  <Spinner animation=\"border\" /> : null;\r\n    const content = !(loading || error|| !selectedId) ? <View char={infoChar} /> : null;\r\n        return (\r\n            <div className=\"char__info\">\r\n             {sceleton}\r\n             {errorMessage}\r\n             {spinner}\r\n             {content}\r\n            </div>\r\n        )\r\n    \r\n    \r\n}\r\n\r\nconst View=({char})=>{\r\n    const {name,description,thumbnail,homepage,wiki,comics}=char;\r\n    const content=comics?.length ?  <>{            \r\n        comics.slice(0,10).map((item,id)=>{\r\n            return(\r\n                \r\n                    <li key={id} className=\"char__comics-item\">\r\n                       {item.name}\r\n                    </li>\r\n                \r\n            )\r\n        })\r\n    }</>: <div>Not Data Yet</div>\r\n    return(\r\n        <>\r\n          <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                   {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                {content}  \r\n                </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CharInfo;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\randomChar\\RandomChar.js",["237"],[],"import {useEffect } from 'react';\r\nimport './RandomChar.scss';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport {getCharacter} from '../charList/CharSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst RandomChar=()=>{\r\n  const dispatch=useDispatch()\r\n  const {rndChar,rndLoading}=useSelector(store=>store.char)\r\n  useEffect(() => {\r\n    updateChar();\r\n  },[])\r\n  \r\n  const updateChar = () => {\r\n    const id = Math.floor(Math.random()*(1011400-1011000)+1011000);\r\n    dispatch(getCharacter(id))\r\n              \r\n              \r\n  }\r\n\r\n   \r\n    const spinner = rndLoading ?  <div className='Spinner'><Spinner animation=\"border\" /></div>: null;\r\n    const content=!rndLoading ?<View char={rndChar} />:null\r\n    return (\r\n      <div className=\"randomchar\">\r\n \r\n        {spinner}\r\n        {content}\r\n          <div className=\"randomchar__static\">\r\n              <p className=\"randomchar__title\">\r\n                  Random character for today!<br/>\r\n                  Do you want to get to know him better?\r\n              </p>\r\n              <p className=\"randomchar__title\">\r\n                  Or choose another one\r\n              </p>\r\n              <button className=\"button button__main\">\r\n                  <div onClick={updateChar} className=\"inner\">try it</div>\r\n              </button>\r\n              <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n          </div>\r\n      </div>\r\n  )\r\n  \r\n   \r\n}\r\n\r\nconst View = ({char}) => {\r\n  const { name, description, thumbnail, homepage, wiki, } = char;\r\n  let CharImg = \"randomchar__img\" ;\r\n  if (thumbnail===\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") CharImg=\"randomchar__no__img\"\r\n \r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img src={thumbnail} alt=\"Random character\" className={ CharImg}/>\r\n              <div className=\"randomchar__info\">\r\n            <p  className=\"randomchar__name\">{ name}</p>\r\n                  <p className=\"randomchar__descr\">\r\n                     {description}\r\n                  </p>\r\n                  <div className=\"randomchar__btns\">\r\n                      <a href={homepage} className=\"button button__main\">\r\n                          <div className=\"inner\">homepage</div>\r\n                      </a>\r\n                      <a href={wiki} className=\"button button__secondary\">\r\n                          <div className=\"inner\">Wiki</div>\r\n                      </a>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  )\r\n}\r\nexport default RandomChar;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\sceleton\\Sceleton.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\charList\\CharSlice.js",["238","239"],[],"import {createSlice,createAsyncThunk,current} from \"@reduxjs/toolkit\"\r\nimport useMarvelServices from \"../../services/MarvelServices\"\r\n\r\nconst initialState = {\r\n  data:[],\r\n  newItemLoading:false,\r\n  charEnded:false,\r\n  selectedId:0,\r\n  firstUpd:true,\r\n  rndChar:{},\r\n  infoChar:{},\r\n  loading:false,\r\n  error:false,\r\n  rndLoading:false,\r\n}\r\n\r\nexport const getData=createAsyncThunk(\r\n  'char/getData',\r\n  async(state)=>{\r\n    const {getAllCharacters}=useMarvelServices();\r\n    const response=await getAllCharacters(state)\r\n    return response;\r\n  }\r\n)\r\nexport const getCharacter=createAsyncThunk(\r\n  'char/getCharacter',\r\n  async(state)=>{\r\n    const {getCharacter}=useMarvelServices();\r\n    const response=await getCharacter(state)\r\n    return response;\r\n  }\r\n)\r\nexport const getInfoCharacter=createAsyncThunk(\r\n  'char/getInfoCharacter',\r\n  async(state)=>{\r\n    const {getCharacter}=useMarvelServices();\r\n    const response=await getCharacter(state)\r\n    return response;\r\n  }\r\n)\r\nconst CharSlice=createSlice({\r\n  name:'char',\r\n  initialState,\r\n  reducers: {\r\n      focusOnItem:(state,action)=>{\r\n        state.selectedId=action.payload\r\n        console.log('FocusOnItem')\r\n      }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getData.pending,(state,action)=>{     \r\n        state.newItemLoading=false\r\n      })\r\n      .addCase(getData.fulfilled,(state,action)=>{\r\n        const ended=true\r\n        if (action.payload<9){\r\n          ended=false\r\n        }\r\n        state.data=[...state.data,...action.payload]\r\n        state.newItemLoading=false\r\n        state.firstUpd=false;\r\n        state.charEnded=ended\r\n    \r\n      })\r\n      .addCase(getData.rejected,(state,action)=>{\r\n        console.log(action?.error?.message)\r\n      })\r\n      \r\n      .addCase(getCharacter.pending,(state,action)=>{\r\n        state.rndLoading=true\r\n      })\r\n      .addCase(getCharacter.fulfilled,(state,action)=>{\r\n        state.rndChar=action.payload;\r\n        state.rndLoading=false\r\n      })\r\n\r\n      .addCase(getInfoCharacter.pending,(state,action)=>{\r\n        state.loading=true;\r\n      })\r\n      .addCase(getInfoCharacter.fulfilled,(state,action)=>{\r\n        state.infoChar=action.payload\r\n        state.loading=false\r\n        state.error=false\r\n        console.log(state.infoChar)\r\n      })\r\n      .addCase(getInfoCharacter.rejected,(state,action)=>{\r\n        state.error=true;\r\n      })\r\n}\r\n})\r\n\r\nconst {actions, reducer} = CharSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  focusOnItem\r\n} = actions;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodSearch\\FoodSearch.js",["240","241","242","243","244"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\Edamam.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodSearch\\FoodSlice.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodItems\\FoodItems.js",["245"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\FoodInfo\\FoodInfo.js",["246"],[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":43,"column":13,"nodeType":"253","messageId":"254","endLine":43,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":22,"column":5,"nodeType":"257","endLine":22,"endColumn":7,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"259","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":19},{"ruleId":"251","severity":1,"message":"260","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":15},{"ruleId":"251","severity":1,"message":"259","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":19},{"ruleId":"251","severity":1,"message":"261","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":19},{"ruleId":"251","severity":1,"message":"262","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":13},{"ruleId":"251","severity":1,"message":"263","line":7,"column":35,"nodeType":"253","messageId":"254","endLine":7,"endColumn":43},{"ruleId":"251","severity":1,"message":"264","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":12},{"ruleId":"265","severity":1,"message":"266","line":39,"column":14,"nodeType":"267","messageId":"268","endLine":41,"endColumn":2},{"ruleId":"251","severity":1,"message":"263","line":4,"column":35,"nodeType":"253","messageId":"254","endLine":4,"endColumn":43},{"ruleId":"255","severity":1,"message":"269","line":35,"column":3,"nodeType":"257","endLine":35,"endColumn":5,"suggestions":"270"},{"ruleId":"255","severity":1,"message":"271","line":37,"column":11,"nodeType":"272","endLine":42,"endColumn":2},{"ruleId":"255","severity":1,"message":"273","line":42,"column":3,"nodeType":"257","endLine":42,"endColumn":16,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"263","line":2,"column":35,"nodeType":"253","messageId":"254","endLine":2,"endColumn":43},{"ruleId":"251","severity":1,"message":"259","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":19},{"ruleId":"251","severity":1,"message":"275","line":3,"column":20,"nodeType":"253","messageId":"254","endLine":3,"endColumn":28},{"ruleId":"251","severity":1,"message":"263","line":7,"column":35,"nodeType":"253","messageId":"254","endLine":7,"endColumn":43},{"ruleId":"255","severity":1,"message":"256","line":18,"column":5,"nodeType":"257","endLine":18,"endColumn":11,"suggestions":"276"},{"ruleId":"251","severity":1,"message":"277","line":1,"column":38,"nodeType":"253","messageId":"254","endLine":1,"endColumn":45},{"ruleId":"251","severity":1,"message":"278","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":25},{"ruleId":"255","severity":1,"message":"279","line":25,"column":4,"nodeType":"257","endLine":25,"endColumn":34,"suggestions":"280"},{"ruleId":"255","severity":1,"message":"281","line":25,"column":4,"nodeType":"257","endLine":25,"endColumn":34,"suggestions":"282"},{"ruleId":"251","severity":1,"message":"263","line":3,"column":35,"nodeType":"253","messageId":"254","endLine":3,"endColumn":43},{"ruleId":"255","severity":1,"message":"256","line":19,"column":5,"nodeType":"257","endLine":19,"endColumn":7,"suggestions":"283"},{"ruleId":"251","severity":1,"message":"275","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":18},{"ruleId":"255","severity":1,"message":"284","line":23,"column":7,"nodeType":"257","endLine":23,"endColumn":9,"suggestions":"285"},{"ruleId":"251","severity":1,"message":"278","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":25},{"ruleId":"251","severity":1,"message":"260","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":15},{"ruleId":"251","severity":1,"message":"263","line":6,"column":35,"nodeType":"253","messageId":"254","endLine":6,"endColumn":43},{"ruleId":"255","severity":1,"message":"286","line":15,"column":5,"nodeType":"257","endLine":15,"endColumn":7,"suggestions":"287"},{"ruleId":"251","severity":1,"message":"275","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":18},{"ruleId":"251","severity":1,"message":"262","line":5,"column":9,"nodeType":"253","messageId":"254","endLine":5,"endColumn":13},{"ruleId":"255","severity":1,"message":"288","line":16,"column":6,"nodeType":"257","endLine":16,"endColumn":18,"suggestions":"289"},{"ruleId":"255","severity":1,"message":"290","line":14,"column":5,"nodeType":"257","endLine":14,"endColumn":7,"suggestions":"291"},{"ruleId":"251","severity":1,"message":"277","line":1,"column":38,"nodeType":"253","messageId":"254","endLine":1,"endColumn":45},{"ruleId":"292","severity":1,"message":"293","line":58,"column":11,"nodeType":"253","messageId":"294","endLine":58,"endColumn":16},{"ruleId":"251","severity":1,"message":"295","line":8,"column":20,"nodeType":"253","messageId":"254","endLine":8,"endColumn":35},{"ruleId":"251","severity":1,"message":"296","line":18,"column":10,"nodeType":"253","messageId":"254","endLine":18,"endColumn":14},{"ruleId":"251","severity":1,"message":"297","line":18,"column":15,"nodeType":"253","messageId":"254","endLine":18,"endColumn":27},{"ruleId":"255","severity":1,"message":"271","line":20,"column":13,"nodeType":"272","endLine":25,"endColumn":4},{"ruleId":"255","severity":1,"message":"298","line":25,"column":5,"nodeType":"257","endLine":25,"endColumn":11,"suggestions":"299"},{"ruleId":"251","severity":1,"message":"300","line":12,"column":15,"nodeType":"253","messageId":"254","endLine":12,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":21,"column":86,"nodeType":"303","messageId":"304","endLine":21,"endColumn":97},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["307"],"'useEffect' is defined but never used.","'Spinner' is defined but never used.","'CloseButton' is defined but never used.","'Link' is defined but never used.","'getState' is defined but never used.","'city' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'firstUpd'. Either include them or remove the dependency array.",["308"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getAutoCompleteCityName'. Either include it or remove the dependency array.",["309"],"'useState' is defined but never used.",["310"],"'current' is defined but never used.","'useMarvelServices' is defined but never used.","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'dispatch' and 'request'. Either include them or remove the dependency array.",["312"],["313"],"React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'firstUpd' and 'onRequest'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has missing dependencies: 'infoChar' and 'updateChar'. Either include them or remove the dependency array.",["316"],"React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.",["317"],"no-const-assign","'ended' is constant.","const","'changeVariables' is defined but never used.","'data' is assigned a value but never used.","'favoriteData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAutoComplete'. Either include it or remove the dependency array.",["318"],"'green' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"319","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [dispatch]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch, firstUpd]",{"range":"344","text":"345"},"Update the dependencies array to be: [getAutoCompleteCityName, weatherCity]",{"range":"346","text":"347"},"Update the dependencies array to be: [city, dispatch]",{"range":"348","text":"349"},"Update the dependencies array to be: [convertVal, inputVal, currency, request]",{"range":"350","text":"351"},"Update the dependencies array to be: [convertVal, inputVal, currency, dispatch, request]",{"range":"352","text":"353"},{"range":"354","text":"343"},"Update the dependencies array to be: [offset, onRequest]",{"range":"355","text":"356"},"Update the dependencies array to be: [firstUpd, onRequest]",{"range":"357","text":"358"},"Update the dependencies array to be: [infoChar, selectedId, updateChar]",{"range":"359","text":"360"},"Update the dependencies array to be: [updateChar]",{"range":"361","text":"362"},"Update the dependencies array to be: [food, getAutoComplete]",{"range":"363","text":"364"},[656,658],"[dispatch]",[1218,1220],"[dispatch, firstUpd]",[1376,1389],"[getAutoCompleteCityName, weatherCity]",[554,560],"[city, dispatch]",[745,775],"[convertVal, inputVal, currency, request]",[737,767],"[convertVal, inputVal, currency, dispatch, request]",[598,600],[659,661],"[offset, onRequest]",[550,552],"[firstUpd, onRequest]",[528,540],"[infoChar, selectedId, updateChar]",[441,443],"[updateChar]",[910,916],"[food, getAutoComplete]"]