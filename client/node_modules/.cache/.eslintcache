[{"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\index.js":"1","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\app\\App.js":"2","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\AuthService.js":"3","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\http.hook.js":"4","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginSlice.js":"5","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\store\\index.js":"6","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\homePanel\\homePanel.js":"7","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginPanel.js":"8","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\signInPanel\\signInPanel.js":"9","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherList.js":"10","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherSlice.js":"11","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\WeatherApi.js":"12","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\useHttp.js":"13","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherList.js":"14","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherSlice.js":"15","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherItems\\WeatherItems.js":"16","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherInfo\\WeatherInfo.js":"17","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ValueSlice.js":"18","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\ConversionApi.js":"19","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\exchangeValue.js":"20","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ExchangeValue.js":"21","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\appHeader\\AppHeader.js":"22","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\IpApi.js":"23","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\Modal\\Modal.js":"24"},{"size":335,"mtime":1647218913077,"results":"25","hashOfConfig":"26"},{"size":1004,"mtime":1648181518247,"results":"27","hashOfConfig":"26"},{"size":467,"mtime":1647112909911,"results":"28","hashOfConfig":"26"},{"size":382,"mtime":1647112909869,"results":"29","hashOfConfig":"26"},{"size":2811,"mtime":1648345036519,"results":"30","hashOfConfig":"26"},{"size":668,"mtime":1648177077000,"results":"31","hashOfConfig":"26"},{"size":370,"mtime":1648083392831,"results":"32","hashOfConfig":"26"},{"size":2343,"mtime":1648336396957,"results":"33","hashOfConfig":"26"},{"size":1787,"mtime":1648330208074,"results":"34","hashOfConfig":"26"},{"size":3305,"mtime":1647963098390,"results":"35","hashOfConfig":"26"},{"size":1071,"mtime":1647963720663,"results":"36","hashOfConfig":"26"},{"size":2058,"mtime":1648347788562,"results":"37","hashOfConfig":"26"},{"size":455,"mtime":1647917619654,"results":"38","hashOfConfig":"26"},{"size":2611,"mtime":1648433191261,"results":"39","hashOfConfig":"26"},{"size":3391,"mtime":1648435480702,"results":"40","hashOfConfig":"26"},{"size":2190,"mtime":1648176195284,"results":"41","hashOfConfig":"26"},{"size":1962,"mtime":1648093335735,"results":"42","hashOfConfig":"26"},{"size":1586,"mtime":1648261662841,"results":"43","hashOfConfig":"26"},{"size":766,"mtime":1648178916558,"results":"44","hashOfConfig":"26"},{"size":2905,"mtime":1648262367323,"results":"45","hashOfConfig":"26"},{"size":2905,"mtime":1648262367323,"results":"46","hashOfConfig":"26"},{"size":1572,"mtime":1648435937409,"results":"47","hashOfConfig":"26"},{"size":536,"mtime":1648436409558,"results":"48","hashOfConfig":"26"},{"size":485,"mtime":1648432972738,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1nsj7la",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"53"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"53"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\index.js",[],[],["130","131"],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\app\\App.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\AuthService.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\http.hook.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginSlice.js",["132"],[],"import AuthService from '../../services/AuthService'\r\nimport axios from 'axios'\r\nimport {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n  email:'',\r\n  password:'',\r\n  auth:false,\r\n  user:{},\r\n  spinner:false\r\n}\r\n\r\n\r\nexport const checkAuth = createAsyncThunk(\r\n  'login/checkAuth',\r\n  async () => {\r\n      const response= await axios.get(`http://localhost:5000/api/refresh`, { withCredentials: true })\r\n      return  response\r\n  }\r\n);\r\nexport const registrationUser=createAsyncThunk(\r\n  'login/registrationUser',\r\n  async(state)=>{\r\n    const response = await AuthService.registration(state.email, state.password);\r\n    return response\r\n  }\r\n)\r\nexport const loginUser=createAsyncThunk(\r\n  'login/loginUser',\r\n  async(state)=>{\r\n    const response = await AuthService.login(state.email, state.password);\r\n    return response;\r\n  }\r\n)\r\n\r\nconst LoginSlice=createSlice({\r\n  name:'login',\r\n  initialState,\r\n  reducers:{\r\n  logout:async(state)=>{\r\n    try {\r\n      const response = await AuthService.logout();\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('data');\r\n      state.auth=false;\r\n      console.log(state.auth)\r\n      state.user={};\r\n    }\r\n    catch (e) {\r\n      console.log(e.response?.data?.message);\r\n    }\r\n  },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n        .addCase(checkAuth.pending,(state)=>{\r\n          state.spinner=true;\r\n        })\r\n        .addCase(checkAuth.fulfilled, (state, action) => {\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.spinner=false;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(checkAuth.rejected, (state,action) => {\r\n            state.spinner=false;\r\n            console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(registrationUser.pending,(state)=>{\r\n          state.spinner=true;\r\n        })\r\n        .addCase(registrationUser.fulfilled, (state,action)=>{\r\n          localStorage.setItem('token',action.payload.data.accessToken );\r\n          state.auth=true;\r\n          state.spinner=false;\r\n          state.user=action.payload.data.user \r\n        })\r\n        .addCase(registrationUser.rejected,(state,action)=>{\r\n          console.log(action?.error?.message)\r\n        })\r\n\r\n        .addCase(loginUser.fulfilled,(state,action)=>{\r\n          localStorage.setItem('token', action.payload.data.accessToken);\r\n          state.auth=true;\r\n          state.user=action.payload.data.user\r\n        })\r\n        .addCase(loginUser.rejected,(state,action)=>{\r\n          console.log(action?.error?.message)\r\n        })\r\n\r\n        \r\n        .addDefaultCase(() => {})\r\n}\r\n})\r\n\r\nconst {actions, reducer} = LoginSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n   logout,\r\n} = actions;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\store\\index.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\homePanel\\homePanel.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\loginPanel\\LoginPanel.js",["133","134"],[],"import Button from 'react-bootstrap/Button'\r\nimport { useEffect,useState } from 'react';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport './LoginPanel.css'\r\nimport { checkAuth,logout,registrationUser, } from './LoginSlice';\r\nimport {NavLink } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst LoginPanel = () => {\r\n\r\n  const [email,setEmail]=useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch=useDispatch()\r\n  const {auth,user,spinner} = useSelector(store => store.login);\r\n\r\n\r\n  useEffect(()=>{\r\n    if(localStorage.getItem('token')){\r\n      dispatch(checkAuth())\r\n    }\r\n  },[])\r\n\r\n  const registration =  (email, password) => {\r\n    const User = {\r\n      email,\r\n      password,\r\n    }\r\n    dispatch(registrationUser(User))\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  const Content=auth ? ` Пользователь ${user.email} авторизован `:<h3>Create your account</h3>;\r\n  \r\n  if (spinner){\r\n    return(\r\n      <Spinner animation=\"border\" />\r\n    )\r\n  }\r\n  \r\n  if (auth){\r\n    return(\r\n      <>\r\n          <h2>{user.isActivated ? 'Аккаунт активирован ':'Активируйте аккаунт'}</h2>\r\n          {Content}\r\n         <Button onClick={()=>{dispatch(logout())}} variant=\"outline-success\">Log Out</Button>{' '}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {Content}\r\n      <div className=\"text-field\">\r\n        <label className=\"text-field__label\">Email</label>\r\n        <input onChange={(e) => setEmail(e.target.value)} className=\"text-field__input\" type=\"email\"  placeholder=\"Email\" value={email}/>\r\n      </div>\r\n      \r\n      <div className=\"text-field\">\r\n          <label className=\"text-field__label\">Password</label>\r\n          <input onChange={(e) => setPassword(e.target.value)} className=\"text-field__input\" type=\"password\"  placeholder=\"*****\" value={password}/>\r\n      </div>\r\n    \r\n     \r\n      <Button onClick={() => registration(email, password)} variant=\"outline-success\" type='submit'>Sign Up</Button>{' '}\r\n      <h5>Already have an account ? <NavLink to='/'>Sign in</NavLink></h5>\r\n      <NavLink  style={({isActive})=>({color:isActive?'#9f0013':'inherit'})} to=\"/Home\"><Button variant=\"outline-success\">HomePage</Button>{' '}</NavLink>\r\n    </>\r\n  )\r\n}\r\nexport default LoginPanel;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\signInPanel\\signInPanel.js",["135","136"],[],"import Button from 'react-bootstrap/Button'\r\nimport { useEffect,useState } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport './signInPanel.css'\r\nimport { loginUser } from '../loginPanel/LoginSlice';\r\nimport {NavLink } from \"react-router-dom\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst SignInPanel=()=>{\r\nconst [email,setEmail]=useState('')\r\nconst [password,setPassword]=useState('')\r\nconst dispatch=useDispatch()\r\nconst {auth}=useSelector((state)=>state.login)\r\n\r\nconst  login=(email,password)=>{\r\n  const User = {\r\n    email,\r\n    password,\r\n  }\r\n  console.log(`auth=${auth}`)\r\n  dispatch(loginUser(User))\r\n  console.log(`auth=${auth}`)\r\n  \r\n  setEmail('')\r\n  setPassword('')\r\n}\r\nif (auth) window.location.assign('http://localhost:3000/weatherList')\r\n  return(\r\n    <>\r\n    <h3>Log in to your account</h3>\r\n     <div className=\"text-field\">\r\n        <label className=\"text-field__label\">Email</label>\r\n        <input onChange={(e) => setEmail(e.target.value)} className=\"text-field__input\" type=\"email\"  placeholder=\"Email\" value={email}/>\r\n      </div>\r\n      \r\n      <div className=\"text-field\">\r\n          <label className=\"text-field__label\">Password</label>\r\n          <input onChange={(e) => setPassword(e.target.value)} className=\"text-field__input\" type=\"password\"  placeholder=\"*****\" value={password}/>\r\n      </div>\r\n    \r\n     \r\n      <Button onClick={() => login(email, password)} variant=\"outline-success\" type='submit'>Sign In</Button>{' '}\r\n      <h5>Don't have an account ? <NavLink to='/registration'>Sign up</NavLink></h5>\r\n      <NavLink  style={({isActive})=>({color:isActive?'#9f0013':'inherit'})} to=\"/Home\"><Button variant=\"outline-success\">HomePage</Button>{' '}</NavLink>\r\n    </>\r\n  )\r\n}\r\nexport default SignInPanel;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherList.js",["137","138","139","140","141"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\weatherSlice.js",["142"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\WeatherApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\hooks\\useHttp.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherList.js",["143","144","145","146"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherList\\WeatherSlice.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherItems\\WeatherItems.js",["147","148"],[],"import './WeatherItems.css'\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {delCity} from '../weatherList/WeatherSlice';\r\nimport { useEffect } from 'react';\r\nimport CloseButton from 'react-bootstrap/CloseButton'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst WeatherItems=()=>{\r\n  const dispatch=useDispatch()\r\n  const {data}= useSelector(store => store.weather);\r\n  \r\n  const cityDelete=(index)=>{\r\n    dispatch(delCity(index))\r\n  }\r\n      \r\n  return(\r\n    <ItemsList data={data} cityDelete={cityDelete}/>\r\n  )\r\n\r\n}\r\n\r\nconst ItemsList=({data,cityDelete})=>{\r\n  const Elements=data.map((item,id)=>{\r\n    return(\r\n      <ListItem\r\n      key={id}\r\n      name={item.name}\r\n      country={item.country}\r\n      localTime={item.localTime}\r\n      img={item.condImg}\r\n      tempC={item.tempC}\r\n      tempF={item.tempF}\r\n      cityDelete={()=>cityDelete(id)}\r\n      />\r\n    )\r\n  })\r\n  return(\r\n    <>\r\n    {Elements}\r\n    </>\r\n  )\r\n}\r\nconst ListItem=({name,country,localTime,img,tempC,tempF,cityDelete})=>{\r\n  return(\r\n    \r\n    <div className='weatherItem'>\r\n        \r\n      <div className='cityInformation'>\r\n        <div>City-{name}</div>\r\n         <div>Country - {country}</div>\r\n         <div>Local Time - {localTime}</div>\r\n      </div>\r\n        \r\n                                                                                                                                                                                                                                                                                                                                                                                                  \r\n      <div className='Temp'>\r\n        <div className='delButton'>\r\n            <CloseButton onClick={cityDelete} />\r\n            <Link style={{'text-decoration':'none'}}  to={`/${name}`}>\r\n                  <button className='info'> ↗</button>\r\n            </Link> \r\n        </div>\r\n         <img src={img} alt='weather img'></img>\r\n        <div>\r\n            <span>{tempC}C° </span>\r\n            <span>{tempF}F° </span>\r\n        </div>\r\n       \r\n      </div>\r\n     \r\n    </div>\r\n   \r\n  \r\n  )\r\n}\r\nexport default WeatherItems","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\weatherInfo\\WeatherInfo.js",["149","150","151","152","153"],[],"// import useWeatherServices from \"../components/services/WeatherApi\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useEffect,useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {weatherInfo} from '../weatherList/WeatherSlice';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport './WeatherInfo.css'\r\n\r\nconst WeatherInfo =({})=>{\r\n\r\n  const {city}=useParams()\r\n  const dispatch=useDispatch()\r\n  const {cityInfo} = useSelector(store => store.weather);\r\n  \r\n\r\n  useEffect(()=>{\r\n    console.log('city=',city)\r\n    dispatch(weatherInfo(city))\r\n  },[city])\r\n  \r\n  // const onRequest=(city)=>{\r\n  //   getWeatherByDays(city).then(onWeatherLoad)\r\n  // }\r\n\r\n  // const onWeatherLoad=(res)=>{\r\n  //   setData(res);\r\n  //   setSpinner(false);\r\n  // }\r\n\r\n  // const content=spinner?<div className=\"Spinner\"><Spinner  animation=\"border\" /></div>:<View data={data}/>;\r\n\r\n  const content=<View data={cityInfo}/>;\r\n  return(\r\n    <>\r\n    <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content={`${city} weather`}\r\n        />\r\n        <title>{city}</title>\r\n    </Helmet>\r\n    {content}\r\n    </>\r\n  )\r\n}\r\nconst View=({data})=>{\r\n  return(\r\n    <div className=\"weatherBlock\">\r\n    <h3>{data.name} ({data.country})</h3>\r\n   \r\n    <h4>Date: {data.day}</h4>\r\n    <div>Sunrise: {data.sunrise1}</div>\r\n    <div>Sunset: { data.sunset1}</div>\r\n    <div className=\"weatherByDays\">\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day1} </h4>\r\n          <span>Max Temp {data.day1MaxTempC}C°</span>\r\n          <span>Min Temp {data.day1MinTempC}C°</span>\r\n        </div>\r\n        <div className=\"weatherBlock\">\r\n          <h4>Date: {data.day2}</h4>\r\n          <span>Max Temp {data.day2MaxTempC}C°</span>\r\n          \r\n          <span>Min Temp {data.day2MinTempC}C°</span>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default WeatherInfo;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ValueSlice.js",["154"],[],"import {createSlice,createAsyncThunk,current} from \"@reduxjs/toolkit\"\r\nimport useConversionServices from '../../services/ConversionApi'\r\n\r\nconst initialState = {\r\n  currency:'1',\r\n  convertCurrency:'',\r\n  inputVal:'USD',\r\n  convertVal:'RUB',\r\n  spinner:false,\r\n  result:false\r\n}\r\nexport const changeValue=createAsyncThunk(\r\n  'value/changeValue',\r\n  async(state)=>{\r\n    const {getConvertValue}=useConversionServices();\r\n    const response=getConvertValue(state)\r\n    return response\r\n  }\r\n\r\n)\r\nconst ValueSlice=createSlice({\r\n  name:'value',\r\n  initialState,\r\n  reducers: {\r\n      changeInputValue:(state,action)=>{\r\n        state.inputVal=action.payload\r\n        \r\n      },\r\n      changeConvertValue:(state,action)=>{\r\n        state.convertVal=action.payload;\r\n        \r\n      },\r\n      onUpdateLocal:(state,action)=>{\r\n        state.currency=action.payload;\r\n        state.result=false;\r\n      }\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(changeValue.pending,(state,action)=>{\r\n        state.spinner=true\r\n      })\r\n      .addCase(changeValue.fulfilled,(state,action)=>{\r\n        console.log(state.convertVal)\r\n        state.convertCurrency=action.payload.data[state.convertVal].value*state.currency\r\n        state.spinner=false\r\n        state.result=true\r\n        \r\n      \r\n      })\r\n      .addCase(changeValue.rejected,(state,action)=>{\r\n        console.log('error')\r\n      })\r\n       \r\n}\r\n})\r\n\r\nconst {actions, reducer} = ValueSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n  changeConvertValue,\r\n  changeInputValue,\r\n  onUpdateLocal\r\n} = actions;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\ConversionApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\exchangeValue.js",["155"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\exchangeValue\\ExchangeValue.js",["156","157","158"],[],"import './ExchangeValue.css'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport useConversionServices from '../../services/ConversionApi';\r\nimport { useState ,useEffect} from 'react';\r\nimport { useDispatch, useSelector,getState } from 'react-redux';\r\nimport {changeValue,changeConvertValue,changeInputValue,onUpdateLocal} from './ValueSlice.js'\r\n\r\n\r\nconst ExchangeValue=()=>{\r\n\r\nconst [currency,setCurrency]=useState('1');\r\nconst [inputVal,setInputVal]=useState('USD');\r\nconst [convertVal,setConvertVal]=useState('RUB')\r\nconst {spinner,result,convertCurrency}=useSelector(store=>store.value)\r\nconst dispatch=useDispatch()\r\n\r\nconst request=()=>{\r\n  dispatch(changeValue(inputVal))\r\n}\r\n\r\n useEffect(()=>{\r\n  dispatch(changeInputValue(inputVal))\r\n  dispatch(changeConvertValue(convertVal))\r\n  // console.log(currency)\r\n  request();\r\n },[convertVal,inputVal,currency])\r\n\r\nconst changeInputVal=(e)=>{\r\n  setInputVal(e.target.value)\r\n  // dispatch(changeInputValue(inputVal))\r\n}\r\nconst changeConvertVal=(e)=>{\r\n  setConvertVal(e.target.value)\r\n  // dispatch(changeConvertValue(convertVal))\r\n}\r\n\r\nconst onUpdate=(e)=>{\r\n  const currency=e.target.value;\r\n  setCurrency(currency);\r\n  dispatch(onUpdateLocal(currency))\r\n  \r\n}\r\n\r\nconst spinnerView=spinner?  <Spinner animation=\"border\" size='sm' variant=\"dark\" />:null;\r\nconst content=result?<Result currency={currency} inputVal={inputVal} convertCurrency={convertCurrency} convertVal={convertVal}/>:null;\r\n\r\nreturn(\r\n    <>\r\n    <h2>Convert</h2>\r\n    <div className='convert'>\r\n    <div className='convertBlock'>\r\n      <label>From\r\n    <select value={inputVal} onChange={changeInputVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n\r\n    </select>\r\n    </label>\r\n    <label>Amount\r\n    <input type=\"number\"\r\n            className=\"convert-input\"\r\n            placeholder=\"...\"\r\n            value={currency}\r\n            onChange={onUpdate}\r\n            />\r\n    </label>   \r\n            <label> To\r\n     <select value={convertVal} onChange={changeConvertVal}>\r\n        <option value='USD'>USD $</option>\r\n        <option value='RUB'>RUB ₽</option>\r\n        <option value='EUR'>EUR €</option>\r\n        <option value='JPY'>JPY ¥</option>\r\n        <option value='BRL'>BRL R$</option>\r\n        <option value='AMD'>AMD ֏</option>\r\n    </select>\r\n    </label>\r\n    \r\n    </div>\r\n    <div className='convertResult'>\r\n      <button onClick={request}> Convert {spinnerView} </button>\r\n      {content}\r\n    </div>\r\n    </div>\r\n  \r\n    </>\r\n  )\r\n}\r\n\r\nconst Result=({currency,inputVal,convertCurrency,convertVal})=>{\r\n  return(\r\n    <div>{currency} {inputVal} is {convertCurrency} {convertVal}</div> \r\n  )\r\n}\r\nexport default ExchangeValue;","C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\appHeader\\AppHeader.js",["159","160"],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\services\\IpApi.js",[],[],"C:\\Users\\svary\\OneDrive\\Рабочий стол\\Auth\\client\\src\\components\\Modal\\Modal.js",[],[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":43,"column":13,"nodeType":"167","messageId":"168","endLine":43,"endColumn":21},{"ruleId":"165","severity":1,"message":"169","line":3,"column":35,"nodeType":"167","messageId":"168","endLine":3,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":22,"column":5,"nodeType":"172","endLine":22,"endColumn":7,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":19},{"ruleId":"165","severity":1,"message":"175","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":15},{"ruleId":"165","severity":1,"message":"174","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":19},{"ruleId":"165","severity":1,"message":"176","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"165","severity":1,"message":"177","line":5,"column":9,"nodeType":"167","messageId":"168","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"169","line":7,"column":35,"nodeType":"167","messageId":"168","endLine":7,"endColumn":43},{"ruleId":"165","severity":1,"message":"178","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":12},{"ruleId":"179","severity":1,"message":"180","line":39,"column":14,"nodeType":"181","messageId":"182","endLine":41,"endColumn":2},{"ruleId":"165","severity":1,"message":"169","line":4,"column":35,"nodeType":"167","messageId":"168","endLine":4,"endColumn":43},{"ruleId":"170","severity":1,"message":"171","line":37,"column":3,"nodeType":"172","endLine":37,"endColumn":5,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"184","line":39,"column":11,"nodeType":"185","endLine":44,"endColumn":2},{"ruleId":"170","severity":1,"message":"186","line":44,"column":3,"nodeType":"172","endLine":44,"endColumn":16,"suggestions":"187"},{"ruleId":"165","severity":1,"message":"169","line":2,"column":35,"nodeType":"167","messageId":"168","endLine":2,"endColumn":43},{"ruleId":"165","severity":1,"message":"174","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"165","severity":1,"message":"175","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":15},{"ruleId":"165","severity":1,"message":"188","line":3,"column":20,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"169","line":7,"column":35,"nodeType":"167","messageId":"168","endLine":7,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":10,"column":21,"nodeType":"181","messageId":"182","endLine":10,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":20,"column":5,"nodeType":"172","endLine":20,"endColumn":11,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"190","line":1,"column":38,"nodeType":"167","messageId":"168","endLine":1,"endColumn":45},{"ruleId":"170","severity":1,"message":"191","line":25,"column":4,"nodeType":"172","endLine":25,"endColumn":34,"suggestions":"192"},{"ruleId":"165","severity":1,"message":"193","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":29},{"ruleId":"165","severity":1,"message":"169","line":5,"column":35,"nodeType":"167","messageId":"168","endLine":5,"endColumn":43},{"ruleId":"170","severity":1,"message":"194","line":26,"column":4,"nodeType":"172","endLine":26,"endColumn":34,"suggestions":"195"},{"ruleId":"165","severity":1,"message":"169","line":3,"column":35,"nodeType":"167","messageId":"168","endLine":3,"endColumn":43},{"ruleId":"170","severity":1,"message":"196","line":20,"column":5,"nodeType":"172","endLine":20,"endColumn":7,"suggestions":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'getState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["200"],"'useEffect' is defined but never used.","'Spinner' is defined but never used.","'CloseButton' is defined but never used.","'Link' is defined but never used.","'city' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["201"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getAutoCompleteCityName'. Either include it or remove the dependency array.",["202"],"'useState' is defined but never used.",["203"],"'current' is defined but never used.","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["204"],"'useConversionServices' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'request'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [dispatch]",{"range":"220","text":"221"},{"range":"222","text":"221"},"Update the dependencies array to be: [getAutoCompleteCityName, weatherCity]",{"range":"223","text":"224"},"Update the dependencies array to be: [city, dispatch]",{"range":"225","text":"226"},"Update the dependencies array to be: [convertVal, inputVal, currency, request]",{"range":"227","text":"228"},"Update the dependencies array to be: [convertVal, inputVal, currency, dispatch, request]",{"range":"229","text":"230"},"Update the dependencies array to be: [dispatch, user]",{"range":"231","text":"232"},[664,666],"[dispatch]",[1252,1254],[1410,1423],"[getAutoCompleteCityName, weatherCity]",[647,653],"[city, dispatch]",[745,775],"[convertVal, inputVal, currency, request]",[837,867],"[convertVal, inputVal, currency, dispatch, request]",[620,622],"[dispatch, user]"]